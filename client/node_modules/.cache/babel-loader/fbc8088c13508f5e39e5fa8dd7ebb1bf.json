{"ast":null,"code":"var _jsxFileName = \"/home/nejc/LDSE/SharedManufacturing/client/src/components/misc/StakeModal.js\";\nimport React from 'react';\nimport { useGlobalContext } from \"../../context/context\";\nimport { FaTimes } from 'react-icons/fa';\nimport Axios from \"axios/index\";\n\nconst StakeModal = () => {\n  const {\n    gameData,\n    isStakeModalOpen,\n    closeStakeModal\n  } = useGlobalContext();\n  const [relativeStake, setRelativeStake] = useState(0);\n\n  const confirm = async () => {\n    try {} catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    let newRelativeStake = Math.floor(gameData.player.stake / gameData.totalStake * 100);\n    setRelativeStake(newRelativeStake);\n  }, [gameData]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `${isStakeModalOpen ? 'modal-confirm-overlay show-modal-confirm' : 'modal-confirm-overlay'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-confirm-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, \"Stake: \", gameData.player.stake, \"$ (\", relativeStake, \"%)\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"close-modal-btn\",\n    onClick: closeStakeModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FaTimes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"confirm-modal-btn\",\n    onClick: confirm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, \"Confirm\")));\n};\n\nexport default StakeModal;","map":{"version":3,"sources":["/home/nejc/LDSE/SharedManufacturing/client/src/components/misc/StakeModal.js"],"names":["React","useGlobalContext","FaTimes","Axios","StakeModal","gameData","isStakeModalOpen","closeStakeModal","relativeStake","setRelativeStake","useState","confirm","err","console","log","useEffect","newRelativeStake","Math","floor","player","stake","totalStake"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAgC,uBAAhC;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,OAAOC,KAAP,MAAkB,aAAlB;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACrB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,gBAAZ;AAA8BC,IAAAA;AAA9B,MAAkDN,gBAAgB,EAAxE;AACA,QAAM,CAACO,aAAD,EAAgBC,gBAAhB,IAAoCC,QAAQ,CAAC,CAAD,CAAlD;;AAEA,QAAMC,OAAO,GAAG,YAAY;AACxB,QAAI,CAEH,CAFD,CAEE,OAAMC,GAAN,EAAW;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ,GAND;;AAQAG,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIC,gBAAgB,GAAGC,IAAI,CAACC,KAAL,CAAYb,QAAQ,CAACc,MAAT,CAAgBC,KAAhB,GAAwBf,QAAQ,CAACgB,UAAlC,GAAgD,GAA3D,CAAvB;AACAZ,IAAAA,gBAAgB,CAACO,gBAAD,CAAhB;AACH,GAHQ,EAGN,CAACX,QAAD,CAHM,CAAT;AAKA,sBACI;AACI,IAAA,SAAS,EAAG,GACRC,gBAAgB,GAAG,0CAAH,GAAgD,uBAC/D,EAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKI;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAYD,QAAQ,CAACc,MAAT,CAAgBC,KAA5B,SAAsCZ,aAAtC,OADJ,eAEI;AAAQ,IAAA,SAAS,EAAC,iBAAlB;AAAoC,IAAA,OAAO,EAAED,eAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,eAKI;AAAQ,IAAA,SAAS,EAAC,mBAAlB;AAAsC,IAAA,OAAO,EAAEI,OAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALJ,CALJ,CADJ;AAeH,CAhCD;;AAkCA,eAAeP,UAAf","sourcesContent":["import React from 'react'\nimport { useGlobalContext} from \"../../context/context\";\nimport { FaTimes } from 'react-icons/fa';\nimport Axios from \"axios/index\";\n\nconst StakeModal = () => {\n    const { gameData, isStakeModalOpen, closeStakeModal } = useGlobalContext();\n    const [relativeStake, setRelativeStake] = useState(0);\n\n    const confirm = async () => {\n        try {\n\n        } catch(err) {\n            console.log(err);\n        }\n    };\n\n    useEffect(() => {\n        let newRelativeStake = Math.floor((gameData.player.stake / gameData.totalStake) * 100);\n        setRelativeStake(newRelativeStake);\n    }, [gameData]);\n\n    return (\n        <div\n            className={`${\n                isStakeModalOpen ? 'modal-confirm-overlay show-modal-confirm' : 'modal-confirm-overlay'\n                }`}\n        >\n            <div className='modal-confirm-container'>\n                <h3>Stake: {gameData.player.stake}$ ({relativeStake}%)</h3>\n                <button className='close-modal-btn' onClick={closeStakeModal}>\n                    <FaTimes></FaTimes>\n                </button>\n                <button className='confirm-modal-btn' onClick={confirm}>Confirm</button>\n            </div>\n        </div>\n    )\n};\n\nexport default StakeModal"]},"metadata":{},"sourceType":"module"}