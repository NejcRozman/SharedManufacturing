{"ast":null,"code":"var _jsxFileName = \"/home/nejc/LDSE/SharedManufacturing/client/src/components/misc/AllTransactionsTable.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useGlobalContext } from \"../../context/context\";\n\nconst AllTransactionsTable = () => {\n  const {\n    gameData\n  } = useGlobalContext();\n  const [tableDataArray, setTableDataArray] = useState([]);\n  const [sortBy, setSortBy] = useState('time');\n  const [orderOfSort, setOrderOfSort] = useState('descending');\n\n  const displayTime = async time => {\n    const createdMillis = await new Date(time);\n    return createdMillis.toLocaleTimeString('it-IT');\n  };\n\n  const sortDataArray = async dataArray => {\n    if (sortBy === 'time') {\n      return await dataArray.sort((a, b) => {\n        let arrayA = a.createdAt.split(\":\");\n        let timeA = parseInt(arrayA[0], 10) * 60 * 60 + parseInt(arrayA[1], 10) * 60 + parseInt(arrayA[2], 10);\n        let arrayB = b.createdAt.split(\":\");\n        let timeB = parseInt(arrayB[0], 10) * 60 * 60 + parseInt(arrayB[1], 10) * 60 + parseInt(arrayB[2], 10);\n\n        if (orderOfSort === \"descending\") {\n          return timeB - timeA;\n        }\n\n        if (orderOfSort === \"ascending\") {\n          return timeA - timeB;\n        }\n      });\n    }\n\n    if (sortBy === 'consumer') {\n      return await dataArray.sort((a, b) => {\n        let textA = a.consumer.toUpperCase();\n        let textB = b.consumer.toUpperCase();\n\n        if (orderOfSort === \"descending\") {\n          return textA < textB ? -1 : textA > textB ? 1 : 0;\n        }\n\n        if (orderOfSort === \"ascending\") {\n          return textA > textB ? -1 : textA < textB ? 1 : 0;\n        }\n      });\n    }\n\n    if (sortBy === 'provider') {\n      return await dataArray.sort((a, b) => {\n        let textA = a.provider.toUpperCase();\n        let textB = b.provider.toUpperCase();\n\n        if (orderOfSort === \"descending\") {\n          return textA < textB ? -1 : textA > textB ? 1 : 0;\n        }\n\n        if (orderOfSort === \"ascending\") {\n          return textA > textB ? -1 : textA < textB ? 1 : 0;\n        }\n      });\n    }\n\n    if (sortBy === 'typeOfService') {\n      return await dataArray.sort((a, b) => {\n        let textA = a.typeOfService.toUpperCase();\n        let textB = b.typeOfService.toUpperCase();\n\n        if (orderOfSort === \"descending\") {\n          return textA < textB ? -1 : textA > textB ? 1 : 0;\n        }\n\n        if (orderOfSort === \"ascending\") {\n          return textA > textB ? -1 : textA < textB ? 1 : 0;\n        }\n      });\n    }\n\n    if (sortBy === 'price') {\n      if (orderOfSort === \"descending\") {\n        return await dataArray.sort((a, b) => parseFloat(b.price) - parseFloat(a.price));\n      }\n\n      if (orderOfSort === \"ascending\") {\n        return await dataArray.sort((a, b) => parseFloat(a.price) - parseFloat(b.price));\n      }\n    }\n\n    if (sortBy === 'txFee') {\n      if (orderOfSort === \"descending\") {\n        return await dataArray.sort((a, b) => parseFloat(b.txFee) - parseFloat(a.txFee));\n      }\n\n      if (orderOfSort === \"ascending\") {\n        return await dataArray.sort((a, b) => parseFloat(a.txFee) - parseFloat(b.txFee));\n      }\n    }\n  };\n\n  useEffect(() => {\n    const renderTableData = async () => {\n      const transactionsArray = await Promise.all(gameData.allTransactions.map(async item => {\n        let {\n          consumer,\n          provider,\n          typeOfService,\n          amountOfService,\n          price,\n          txFee,\n          createdAt\n        } = item;\n        const consumerObject = await gameData.players.filter(player => player._id === consumer);\n        const providerObject = await gameData.players.filter(player => player._id === provider);\n        const timeString = await displayTime(createdAt);\n\n        if (!Array.isArray(providerObject) || !providerObject.length) {\n          return {\n            id: item._id,\n            consumer: consumerObject[0].playerName,\n            provider: \"Blockchain\",\n            typeOfService: typeOfService,\n            amountOfService: amountOfService,\n            price: price,\n            txFee: txFee,\n            type: \"cancel transaction\",\n            createdAt: timeString\n          };\n        }\n\n        return {\n          id: item._id,\n          consumer: consumerObject[0].playerName,\n          provider: providerObject[0].playerName,\n          typeOfService: typeOfService,\n          amountOfService: amountOfService,\n          price: price,\n          txFee: txFee,\n          type: \"cancel transaction\",\n          createdAt: timeString\n        };\n      }));\n      const dataArray = await sortDataArray(transactionsArray);\n      setTableDataArray(dataArray);\n    };\n\n    renderTableData();\n  }, [gameData]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table-all-transactions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 21\n    }\n  }, \"Time\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 21\n    }\n  }, \"Consumer\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 21\n    }\n  }, \"Provider\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }\n  }, \"Type of service\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  }, \"Price/Amount\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  }, \"Tx Fee\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }, tableDataArray.map(item => /*#__PURE__*/React.createElement(\"tr\", {\n    key: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 33\n    }\n  }, item.createdAt), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 33\n    }\n  }, item.consumer), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 33\n    }\n  }, item.provider), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 33\n    }\n  }, item.typeOfService), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 33\n    }\n  }, item.price), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 33\n    }\n  }, item.txFee))))));\n};\n\nexport default AllTransactionsTable;","map":{"version":3,"sources":["/home/nejc/LDSE/SharedManufacturing/client/src/components/misc/AllTransactionsTable.js"],"names":["React","useState","useEffect","useGlobalContext","AllTransactionsTable","gameData","tableDataArray","setTableDataArray","sortBy","setSortBy","orderOfSort","setOrderOfSort","displayTime","time","createdMillis","Date","toLocaleTimeString","sortDataArray","dataArray","sort","a","b","arrayA","createdAt","split","timeA","parseInt","arrayB","timeB","textA","consumer","toUpperCase","textB","provider","typeOfService","parseFloat","price","txFee","renderTableData","transactionsArray","Promise","all","allTransactions","map","item","amountOfService","consumerObject","players","filter","player","_id","providerObject","timeString","Array","isArray","length","id","playerName","type"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { useGlobalContext} from \"../../context/context\";\n\nconst AllTransactionsTable = () => {\n    const { gameData,  } = useGlobalContext();\n    const [tableDataArray, setTableDataArray] = useState([]);\n    const [sortBy, setSortBy] = useState('time');\n    const [orderOfSort, setOrderOfSort] = useState('descending');\n\n    const displayTime = async (time) => {\n        const createdMillis = await new Date(time);\n        return createdMillis.toLocaleTimeString('it-IT');\n    };\n\n    const sortDataArray = async (dataArray) => {\n        if (sortBy === 'time') {\n            return await dataArray.sort((a, b) => {\n                let arrayA = a.createdAt.split(\":\");\n                let timeA = (parseInt(arrayA[0], 10) * 60 * 60) + (parseInt(arrayA[1], 10) * 60) + parseInt(arrayA[2], 10);\n                let arrayB = b.createdAt.split(\":\");\n                let timeB = (parseInt(arrayB[0], 10) * 60 * 60) + (parseInt(arrayB[1], 10) * 60) + parseInt(arrayB[2], 10);\n                if (orderOfSort === \"descending\") {\n                    return timeB - timeA;\n                } if (orderOfSort === \"ascending\") {\n                    return timeA - timeB;\n                }\n            });\n        } if (sortBy === 'consumer') {\n            return await dataArray.sort((a, b) => {\n                let textA = a.consumer.toUpperCase();\n                let textB = b.consumer.toUpperCase();\n                if (orderOfSort === \"descending\") {\n                    return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;\n                } if (orderOfSort === \"ascending\") {\n                    return (textA > textB) ? -1 : (textA < textB) ? 1 : 0;\n                }\n            });\n        } if (sortBy === 'provider') {\n            return await dataArray.sort((a, b) => {\n                let textA = a.provider.toUpperCase();\n                let textB = b.provider.toUpperCase();\n                if (orderOfSort === \"descending\") {\n                    return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;\n                } if (orderOfSort === \"ascending\") {\n                    return (textA > textB) ? -1 : (textA < textB) ? 1 : 0;\n                }\n            });\n        } if (sortBy === 'typeOfService') {\n            return await dataArray.sort((a, b) => {\n                let textA = a.typeOfService.toUpperCase();\n                let textB = b.typeOfService.toUpperCase();\n                if (orderOfSort === \"descending\") {\n                    return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;\n                } if (orderOfSort === \"ascending\") {\n                    return (textA > textB) ? -1 : (textA < textB) ? 1 : 0;\n                }\n            });\n        } if (sortBy === 'price') {\n            if (orderOfSort === \"descending\") {\n                return await dataArray.sort((a, b) => parseFloat(b.price) - parseFloat(a.price));\n            } if (orderOfSort === \"ascending\") {\n                return await dataArray.sort((a, b) => parseFloat(a.price) - parseFloat(b.price));\n            }\n        } if (sortBy === 'txFee') {\n            if (orderOfSort === \"descending\") {\n                return await dataArray.sort((a, b) => parseFloat(b.txFee) - parseFloat(a.txFee));\n            } if (orderOfSort === \"ascending\") {\n                return await dataArray.sort((a, b) => parseFloat(a.txFee) - parseFloat(b.txFee));\n            }\n        }\n    };\n\n    useEffect(() => {\n        const renderTableData = async () => {\n            const transactionsArray = await Promise.all(gameData.allTransactions.map(async (item) => {\n                let { consumer, provider, typeOfService, amountOfService, price, txFee, createdAt } = item;\n                const consumerObject = await gameData.players.filter(player => player._id === consumer);\n                const providerObject = await gameData.players.filter(player => player._id === provider);\n                const timeString = await displayTime(createdAt);\n                if (!Array.isArray(providerObject) || !providerObject.length) {\n                    return (\n                        {\n                            id: item._id,\n                            consumer: consumerObject[0].playerName,\n                            provider: \"Blockchain\",\n                            typeOfService: typeOfService,\n                            amountOfService: amountOfService,\n                            price: price,\n                            txFee: txFee,\n                            type: \"cancel transaction\",\n                            createdAt: timeString\n                        }\n                    )\n                }\n                return (\n                    {\n                        id: item._id,\n                        consumer: consumerObject[0].playerName,\n                        provider: providerObject[0].playerName,\n                        typeOfService: typeOfService,\n                        amountOfService: amountOfService,\n                        price: price,\n                        txFee: txFee,\n                        type: \"cancel transaction\",\n                        createdAt: timeString\n                    }\n                )\n            }));\n            const dataArray = await sortDataArray(transactionsArray);\n            setTableDataArray(dataArray);\n        };\n        renderTableData();\n    }, [gameData]);\n\n\n    return (\n        <>\n            <table className=\"table-all-transactions\">\n                <thead>\n                <tr>\n                    <th>Time</th>\n                    <th>Consumer</th>\n                    <th>Provider</th>\n                    <th>Type of service</th>\n                    <th>Price/Amount</th>\n                    <th>Tx Fee</th>\n                </tr>\n                </thead>\n                <tbody>\n                {\n                    tableDataArray.map((item) =>\n                        (\n                            <tr key={item.id}>\n                                <td>{item.createdAt}</td>\n                                <td>{item.consumer}</td>\n                                <td>{item.provider}</td>\n                                <td>{item.typeOfService}</td>\n                                <td>{item.price}</td>\n                                <td>{item.txFee}</td>\n                            </tr>\n                        )\n                    )\n                }\n                </tbody>\n            </table>\n        </>\n    )\n};\n\nexport default AllTransactionsTable"]},"metadata":{},"sourceType":"module"}