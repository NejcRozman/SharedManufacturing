{"ast":null,"code":"var _jsxFileName = \"/home/nejc/LDSE/SharedManufacturing/client/src/components/misc/AllTransactionsTable.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useGlobalContext } from \"../../context/context\";\n\nconst AllTransactionsTable = () => {\n  const {\n    gameData\n  } = useGlobalContext();\n  const [tableDataArray, setTableDataArray] = useState([]);\n  const [sortBy, setSortBy] = useState('typeOfService');\n  const [orderOfSort, setOrderOfSort] = useState('ascending');\n\n  const displayTime = async time => {\n    const createdMillis = await new Date(time);\n    return createdMillis.toLocaleTimeString('it-IT');\n  };\n\n  const sortDataArray = async () => {\n    if (sortBy === 'time') {\n      return await gameData.allTransactions.sort((a, b) => b.createdAt - a.createdAt);\n    }\n\n    if (sortBy === 'consumer') {\n      return await gameData.allTransactions.sort((a, b) => b.consumer - a.consumer);\n    }\n\n    if (sortBy === 'provider') {\n      return await gameData.allTransactions.sort((a, b) => b.provider - a.provider);\n    }\n\n    if (sortBy === 'typeOfService') {\n      return await gameData.allTransactions.sort((a, b) => b.typeOfService - a.typeOfService);\n    }\n\n    if (sortBy === 'price') {\n      return await gameData.allTransactions.sort((a, b) => parseFloat(b.price) - parseFloat(a.price));\n    }\n\n    if (sortBy === 'txFee') {\n      return await gameData.allTransactions.sort((a, b) => parseFloat(b.txFee) - parseFloat(a.txFee));\n    }\n  };\n\n  useEffect(() => {\n    const renderTableData = async () => {\n      const dataArray = await sortDataArray();\n      const transactionsArray = await Promise.all(dataArray.map(async item => {\n        let {\n          consumer,\n          provider,\n          typeOfService,\n          amountOfService,\n          price,\n          txFee,\n          createdAt\n        } = item;\n        const consumerObject = await gameData.players.filter(player => player._id === consumer);\n        const providerObject = await gameData.players.filter(player => player._id === provider);\n        const timeString = await displayTime(createdAt);\n\n        if (!Array.isArray(providerObject) || !providerObject.length) {\n          return {\n            id: item._id,\n            consumer: consumerObject[0].playerName,\n            provider: \"Blockchain\",\n            typeOfService: typeOfService,\n            amountOfService: amountOfService,\n            price: price,\n            txFee: txFee,\n            type: \"cancel transaction\",\n            createdAt: timeString\n          };\n        }\n\n        return {\n          id: item._id,\n          consumer: consumerObject[0].playerName,\n          provider: providerObject[0].playerName,\n          typeOfService: typeOfService,\n          amountOfService: amountOfService,\n          price: price,\n          txFee: txFee,\n          type: \"cancel transaction\",\n          createdAt: timeString\n        };\n      }));\n      setTableDataArray(transactionsArray);\n    };\n\n    renderTableData();\n  }, [gameData]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table-all-transactions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }, \"Time\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, \"Consumer\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, \"Provider\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, \"Type of service\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, \"Price/Amount\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, \"Tx Fee\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, tableDataArray.map(item => /*#__PURE__*/React.createElement(\"tr\", {\n    key: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 33\n    }\n  }, item.createdAt), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 33\n    }\n  }, item.consumer), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 33\n    }\n  }, item.provider), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 33\n    }\n  }, item.typeOfService), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 33\n    }\n  }, item.price), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 33\n    }\n  }, item.txFee))))));\n};\n\nexport default AllTransactionsTable;","map":{"version":3,"sources":["/home/nejc/LDSE/SharedManufacturing/client/src/components/misc/AllTransactionsTable.js"],"names":["React","useState","useEffect","useGlobalContext","AllTransactionsTable","gameData","tableDataArray","setTableDataArray","sortBy","setSortBy","orderOfSort","setOrderOfSort","displayTime","time","createdMillis","Date","toLocaleTimeString","sortDataArray","allTransactions","sort","a","b","createdAt","consumer","provider","typeOfService","parseFloat","price","txFee","renderTableData","dataArray","transactionsArray","Promise","all","map","item","amountOfService","consumerObject","players","filter","player","_id","providerObject","timeString","Array","isArray","length","id","playerName","type"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { useGlobalContext} from \"../../context/context\";\n\nconst AllTransactionsTable = () => {\n    const { gameData,  } = useGlobalContext();\n    const [tableDataArray, setTableDataArray] = useState([]);\n    const [sortBy, setSortBy] = useState('typeOfService');\n    const [orderOfSort, setOrderOfSort] = useState('ascending');\n\n    const displayTime = async (time) => {\n        const createdMillis = await new Date(time);\n        return createdMillis.toLocaleTimeString('it-IT');\n    };\n\n    const sortDataArray = async () => {\n        if (sortBy === 'time') {\n            return await gameData.allTransactions.sort((a, b) => b.createdAt - a.createdAt);\n        } if (sortBy === 'consumer') {\n            return await gameData.allTransactions.sort((a, b) => b.consumer - a.consumer);\n        } if (sortBy === 'provider') {\n            return await gameData.allTransactions.sort((a, b) => b.provider - a.provider);\n        } if (sortBy === 'typeOfService') {\n            return await gameData.allTransactions.sort((a, b) => b.typeOfService - a.typeOfService);\n        } if (sortBy === 'price') {\n            return await gameData.allTransactions.sort((a, b) => parseFloat(b.price) - parseFloat(a.price));\n        } if (sortBy === 'txFee') {\n            return await gameData.allTransactions.sort((a, b) => parseFloat(b.txFee) - parseFloat(a.txFee));\n        }\n    };\n\n    useEffect(() => {\n        const renderTableData = async () => {\n            const dataArray = await sortDataArray();\n            const transactionsArray = await Promise.all(dataArray.map(async (item) => {\n                let { consumer, provider, typeOfService, amountOfService, price, txFee, createdAt } = item;\n                const consumerObject = await gameData.players.filter(player => player._id === consumer);\n                const providerObject = await gameData.players.filter(player => player._id === provider);\n                const timeString = await displayTime(createdAt);\n                if (!Array.isArray(providerObject) || !providerObject.length) {\n                    return (\n                        {\n                            id: item._id,\n                            consumer: consumerObject[0].playerName,\n                            provider: \"Blockchain\",\n                            typeOfService: typeOfService,\n                            amountOfService: amountOfService,\n                            price: price,\n                            txFee: txFee,\n                            type: \"cancel transaction\",\n                            createdAt: timeString\n                        }\n                    )\n                }\n                return (\n                    {\n                        id: item._id,\n                        consumer: consumerObject[0].playerName,\n                        provider: providerObject[0].playerName,\n                        typeOfService: typeOfService,\n                        amountOfService: amountOfService,\n                        price: price,\n                        txFee: txFee,\n                        type: \"cancel transaction\",\n                        createdAt: timeString\n                    }\n                )\n            }));\n            setTableDataArray(transactionsArray);\n        };\n        renderTableData();\n    }, [gameData]);\n\n\n    return (\n        <>\n            <table className=\"table-all-transactions\">\n                <thead>\n                <tr>\n                    <th>Time</th>\n                    <th>Consumer</th>\n                    <th>Provider</th>\n                    <th>Type of service</th>\n                    <th>Price/Amount</th>\n                    <th>Tx Fee</th>\n                </tr>\n                </thead>\n                <tbody>\n                {\n                    tableDataArray.map((item) =>\n                        (\n                            <tr key={item.id}>\n                                <td>{item.createdAt}</td>\n                                <td>{item.consumer}</td>\n                                <td>{item.provider}</td>\n                                <td>{item.typeOfService}</td>\n                                <td>{item.price}</td>\n                                <td>{item.txFee}</td>\n                            </tr>\n                        )\n                    )\n                }\n                </tbody>\n            </table>\n        </>\n    )\n};\n\nexport default AllTransactionsTable"]},"metadata":{},"sourceType":"module"}