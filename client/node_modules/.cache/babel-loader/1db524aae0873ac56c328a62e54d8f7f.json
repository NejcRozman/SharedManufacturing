{"ast":null,"code":"var _jsxFileName = \"/home/nejc/LDSE/SharedManufacturing/client/src/components/misc/BarChart.js\";\nimport React from 'react';\nimport { ResponsiveBar } from '@nivo/bar';\nimport { useGlobalContext } from \"../../context/context\";\n\nconst BarChart = ({\n  data,\n  scale\n}) => {\n  const {\n    gameData,\n    openTradeModal,\n    setTradeModalContent,\n    openCancelOrderModal,\n    setCancelOrderModalContent\n  } = useGlobalContext();\n\n  const setTradeModal = data => {\n    if (data.typeOfService !== gameData.player.typeOfService) {\n      setTradeModalContent(data);\n      openTradeModal();\n    } else {\n      if (data.playerName === gameData.player.playerName) {\n        setCancelOrderModalContent(data);\n        openCancelOrderModal();\n      }\n    }\n  };\n\n  const mouseHover = (data, event) => {\n    if (data.typeOfService !== gameData.player.typeOfService) {\n      event.target.style.cursor = 'pointer';\n    } else {\n      if (data.playerName === gameData.player.playerName) {\n        event.target.style.cursor = 'pointer';\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(ResponsiveBar, {\n    data: data,\n    onClick: data => setTradeModal(data.data),\n    onMouseEnter: (data, event) => mouseHover(data.data, event),\n    keys: ['price'],\n    indexBy: \"playerName\",\n    margin: {\n      top: 10,\n      right: 20,\n      bottom: 50,\n      left: 70\n    },\n    padding: 0.25,\n    valueScale: {\n      type: scale\n    },\n    theme: {\n      \"fontSize\": 14,\n      fontFamily: \"Roboto, sans-serif\",\n      axis: {\n        legend: {\n          text: {\n            fontSize: \"16px\",\n            fontWeight: \"bold\",\n            fontFamily: \"Roboto, sans-serif\"\n          }\n        }\n      }\n    },\n    colors: d => d.data.color,\n    borderColor: {\n      from: 'color',\n      modifiers: [['darker', 1.6]]\n    },\n    axisTop: null,\n    axisRight: null,\n    axisBottom: {\n      tickSize: 5,\n      tickPadding: 5,\n      tickRotation: 0\n    },\n    axisLeft: {\n      tickSize: 5,\n      tickPadding: 5,\n      tickRotation: 0,\n      legend: 'PRICE',\n      legendPosition: 'middle',\n      legendOffset: -50,\n      tickValues: 5\n    },\n    labelSkipWidth: 12,\n    labelSkipHeight: 12,\n    labelTextColor: \"white\",\n    animate: true,\n    motionStiffness: 90,\n    motionDamping: 15,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  });\n};\n\nexport default BarChart;","map":{"version":3,"sources":["/home/nejc/LDSE/SharedManufacturing/client/src/components/misc/BarChart.js"],"names":["React","ResponsiveBar","useGlobalContext","BarChart","data","scale","gameData","openTradeModal","setTradeModalContent","openCancelOrderModal","setCancelOrderModalContent","setTradeModal","typeOfService","player","playerName","mouseHover","event","target","style","cursor","top","right","bottom","left","type","fontFamily","axis","legend","text","fontSize","fontWeight","d","color","from","modifiers","tickSize","tickPadding","tickRotation","legendPosition","legendOffset","tickValues"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { ResponsiveBar } from '@nivo/bar';\nimport { useGlobalContext} from \"../../context/context\";\n\nconst BarChart = ({data, scale}) => {\n    const { gameData, openTradeModal, setTradeModalContent, openCancelOrderModal, setCancelOrderModalContent } = useGlobalContext();\n\n    const setTradeModal = (data) => {\n        if (data.typeOfService !== gameData.player.typeOfService) {\n            setTradeModalContent(data);\n            openTradeModal();\n        } else {\n            if (data.playerName === gameData.player.playerName) {\n                setCancelOrderModalContent(data);\n                openCancelOrderModal();\n            }\n        }\n    };\n\n    const mouseHover = (data, event) => {\n        if (data.typeOfService !== gameData.player.typeOfService) {\n            event.target.style.cursor = 'pointer';\n        } else {\n            if (data.playerName === gameData.player.playerName) {\n                event.target.style.cursor = 'pointer';\n            }\n        }\n    };\n\n    return (\n        <ResponsiveBar\n            data={data}\n            onClick={(data) => setTradeModal(data.data)}\n            onMouseEnter={(data, event) => mouseHover(data.data, event)}\n            keys={[ 'price' ]}\n            indexBy=\"playerName\"\n            margin={{ top: 10, right: 20, bottom: 50, left: 70 }}\n            padding={0.25}\n            valueScale={{ type: scale }}\n            theme={{ \"fontSize\": 14, fontFamily: \"Roboto, sans-serif\", axis: { legend: { text: { fontSize: \"16px\", fontWeight: \"bold\", fontFamily: \"Roboto, sans-serif\" } } } }}\n            colors={d => d.data.color}\n            borderColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\n            axisTop={null}\n            axisRight={null}\n            axisBottom={{\n                tickSize: 5,\n                tickPadding: 5,\n                tickRotation: 0,\n            }}\n            axisLeft={{\n                tickSize: 5,\n                tickPadding: 5,\n                tickRotation: 0,\n                legend: 'PRICE',\n                legendPosition: 'middle',\n                legendOffset: -50,\n                tickValues: 5\n            }}\n            labelSkipWidth={12}\n            labelSkipHeight={12}\n            labelTextColor=\"white\"\n            animate={true}\n            motionStiffness={90}\n            motionDamping={15}\n        />\n    )\n};\n\n\nexport default BarChart"]},"metadata":{},"sourceType":"module"}