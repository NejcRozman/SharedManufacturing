{"ast":null,"code":"var _jsxFileName = \"/home/nejc/LDSE/SharedManufacturing/client/src/components/misc/ConfirmModal.js\";\nimport React from 'react';\nimport { useGlobalContext } from \"../../context/context\";\nimport { FaTimes } from 'react-icons/fa';\nimport Axios from \"axios/index\";\n\nconst ConfirmModal = () => {\n  const {\n    isConfirmModalOpen,\n    closeConfirmModal,\n    confirmModalContent\n  } = useGlobalContext();\n\n  const confirm = async () => {\n    try {\n      const token = localStorage.getItem(\"auth-token\");\n      const playerId = localStorage.getItem(\"playerId\");\n\n      if (confirmModalContent.type === \"cancel transaction\") {\n        const loginRes = await Axios.delete(`http://localhost:8000/player/cancelTransaction/${playerId}`, {\n          headers: {\n            Authorization: \"Bearer \" + token\n          },\n          data: {\n            transactionId: confirmModalContent.id\n          }\n        });\n      }\n\n      closeConfirmModal();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `${isConfirmModalOpen ? 'modal-confirm-overlay show-modal-confirm' : 'modal-confirm-overlay'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-confirm-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, \"Are you sure you want to \", confirmModalContent.type, \":\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, \"Consumer: \", confirmModalContent.consumer), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, \"Provider: \", confirmModalContent.provider), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, \"typeOfService: \", confirmModalContent.typeOfService), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, \"price: \", confirmModalContent.price, \"$\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, \"txFee: \", confirmModalContent.txFee, \"$\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"close-modal-btn\",\n    onClick: closeConfirmModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FaTimes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"confirm-modal-btn\",\n    onClick: confirm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, \"Confirm\")));\n};\n\nexport default ConfirmModal;","map":{"version":3,"sources":["/home/nejc/LDSE/SharedManufacturing/client/src/components/misc/ConfirmModal.js"],"names":["React","useGlobalContext","FaTimes","Axios","ConfirmModal","isConfirmModalOpen","closeConfirmModal","confirmModalContent","confirm","token","localStorage","getItem","playerId","type","loginRes","delete","headers","Authorization","data","transactionId","id","err","console","log","consumer","provider","typeOfService","price","txFee"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAgC,uBAAhC;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,OAAOC,KAAP,MAAkB,aAAlB;;AAEA,MAAMC,YAAY,GAAG,MAAM;AACvB,QAAM;AAAEC,IAAAA,kBAAF;AAAsBC,IAAAA,iBAAtB;AAAyCC,IAAAA;AAAzC,MAAiEN,gBAAgB,EAAvF;;AAEA,QAAMO,OAAO,GAAG,YAAY;AACxB,QAAI;AACA,YAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAd;AACA,YAAMC,QAAQ,GAAGF,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAjB;;AACA,UAAIJ,mBAAmB,CAACM,IAApB,KAA6B,oBAAjC,EAAuD;AACnD,cAAMC,QAAQ,GAAI,MAAMX,KAAK,CAACY,MAAN,CAAc,kDAAiDH,QAAS,EAAxE,EAA2E;AAC/FI,UAAAA,OAAO,EAAE;AACLC,YAAAA,aAAa,EAAE,YAAYR;AADtB,WADsF;AAI/FS,UAAAA,IAAI,EAAE;AACFC,YAAAA,aAAa,EAAEZ,mBAAmB,CAACa;AADjC;AAJyF,SAA3E,CAAxB;AAQH;;AACDd,MAAAA,iBAAiB;AACpB,KAdD,CAcE,OAAMe,GAAN,EAAW;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ,GAlBD;;AAoBA,sBACI;AACI,IAAA,SAAS,EAAG,GACRhB,kBAAkB,GAAG,0CAAH,GAAgD,uBACjE,EAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKI;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAA8BE,mBAAmB,CAACM,IAAlD,MADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAeN,mBAAmB,CAACiB,QAAnC,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAejB,mBAAmB,CAACkB,QAAnC,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAoBlB,mBAAmB,CAACmB,aAAxC,CAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAYnB,mBAAmB,CAACoB,KAAhC,MAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAYpB,mBAAmB,CAACqB,KAAhC,MALJ,CAFJ,eASI;AAAQ,IAAA,SAAS,EAAC,iBAAlB;AAAoC,IAAA,OAAO,EAAEtB,iBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CATJ,eAYI;AAAQ,IAAA,SAAS,EAAC,mBAAlB;AAAsC,IAAA,OAAO,EAAEE,OAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAZJ,CALJ,CADJ;AAsBH,CA7CD;;AA+CA,eAAeJ,YAAf","sourcesContent":["import React from 'react'\nimport { useGlobalContext} from \"../../context/context\";\nimport { FaTimes } from 'react-icons/fa';\nimport Axios from \"axios/index\";\n\nconst ConfirmModal = () => {\n    const { isConfirmModalOpen, closeConfirmModal, confirmModalContent } = useGlobalContext();\n\n    const confirm = async () => {\n        try {\n            const token = localStorage.getItem(\"auth-token\");\n            const playerId = localStorage.getItem(\"playerId\");\n            if (confirmModalContent.type === \"cancel transaction\") {\n                const loginRes =  await Axios.delete(`http://localhost:8000/player/cancelTransaction/${playerId}`, {\n                    headers: {\n                        Authorization: \"Bearer \" + token\n                    },\n                    data: {\n                        transactionId: confirmModalContent.id\n                    }\n                });\n            }\n            closeConfirmModal();\n        } catch(err) {\n            console.log(err);\n        }\n    };\n\n    return (\n        <div\n            className={`${\n                isConfirmModalOpen ? 'modal-confirm-overlay show-modal-confirm' : 'modal-confirm-overlay'\n                }`}\n        >\n            <div className='modal-confirm-container'>\n                <h3>Are you sure you want to {confirmModalContent.type}:</h3>\n                <ul>\n                    <li>Consumer: {confirmModalContent.consumer}</li>\n                    <li>Provider: {confirmModalContent.provider}</li>\n                    <li>typeOfService: {confirmModalContent.typeOfService}</li>\n                    <li>price: {confirmModalContent.price}$</li>\n                    <li>txFee: {confirmModalContent.txFee}$</li>\n                </ul>\n                <button className='close-modal-btn' onClick={closeConfirmModal}>\n                    <FaTimes></FaTimes>\n                </button>\n                <button className='confirm-modal-btn' onClick={confirm}>Confirm</button>\n            </div>\n        </div>\n    )\n};\n\nexport default ConfirmModal"]},"metadata":{},"sourceType":"module"}