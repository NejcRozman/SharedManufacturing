{"ast":null,"code":"var _jsxFileName = \"/home/nejc/LDSE/SharedManufacturing/client/src/components/misc/AllTransactionsTable.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useGlobalContext } from \"../../context/context\";\nimport { FaArrowUp, FaArrowDown } from 'react-icons/fa';\n\nconst AllTransactionsTable = () => {\n  const {\n    gameData\n  } = useGlobalContext();\n  const [tableDataArray, setTableDataArray] = useState([]);\n  const [sortBy, setSortBy] = useState('time');\n  const [orderOfSort, setOrderOfSort] = useState('ascending');\n  const [checkBoxes, setCheckBoxes] = useState([{\n    type: \"A\",\n    isChecked: false\n  }, {\n    type: \"B\",\n    isChecked: false\n  }, {\n    type: \"C\",\n    isChecked: false\n  }, {\n    type: \"Stake\",\n    isChecked: false\n  }, {\n    type: \"Unstake\",\n    isChecked: false\n  }]);\n\n  const displayTime = async time => {\n    const createdMillis = await new Date(time);\n    return createdMillis.toLocaleTimeString('it-IT');\n  };\n\n  const sortDataArray = async dataArray => {\n    if (sortBy === 'time') {\n      return await dataArray.sort((a, b) => {\n        let arrayA = a.createdAt.split(\":\");\n        let timeA = parseInt(arrayA[0], 10) * 60 * 60 + parseInt(arrayA[1], 10) * 60 + parseInt(arrayA[2], 10);\n        let arrayB = b.createdAt.split(\":\");\n        let timeB = parseInt(arrayB[0], 10) * 60 * 60 + parseInt(arrayB[1], 10) * 60 + parseInt(arrayB[2], 10);\n\n        if (orderOfSort === \"descending\") {\n          return timeB - timeA;\n        }\n\n        if (orderOfSort === \"ascending\") {\n          return timeA - timeB;\n        }\n      });\n    }\n\n    if (sortBy === 'consumer') {\n      return await dataArray.sort((a, b) => {\n        let textA = a.consumer.toUpperCase();\n        let textB = b.consumer.toUpperCase();\n\n        if (orderOfSort === \"descending\") {\n          return textA < textB ? -1 : textA > textB ? 1 : 0;\n        }\n\n        if (orderOfSort === \"ascending\") {\n          return textA > textB ? -1 : textA < textB ? 1 : 0;\n        }\n      });\n    }\n\n    if (sortBy === 'provider') {\n      return await dataArray.sort((a, b) => {\n        let textA = a.provider.toUpperCase();\n        let textB = b.provider.toUpperCase();\n\n        if (orderOfSort === \"descending\") {\n          return textA < textB ? -1 : textA > textB ? 1 : 0;\n        }\n\n        if (orderOfSort === \"ascending\") {\n          return textA > textB ? -1 : textA < textB ? 1 : 0;\n        }\n      });\n    }\n\n    if (sortBy === 'typeOfService') {\n      return await dataArray.sort((a, b) => {\n        let textA = a.typeOfService.toUpperCase();\n        let textB = b.typeOfService.toUpperCase();\n\n        if (orderOfSort === \"descending\") {\n          return textA < textB ? -1 : textA > textB ? 1 : 0;\n        }\n\n        if (orderOfSort === \"ascending\") {\n          return textA > textB ? -1 : textA < textB ? 1 : 0;\n        }\n      });\n    }\n\n    if (sortBy === 'price') {\n      if (orderOfSort === \"descending\") {\n        return await dataArray.sort((a, b) => parseFloat(b.price) - parseFloat(a.price));\n      }\n\n      if (orderOfSort === \"ascending\") {\n        return await dataArray.sort((a, b) => parseFloat(a.price) - parseFloat(b.price));\n      }\n    }\n\n    if (sortBy === 'txFee') {\n      if (orderOfSort === \"descending\") {\n        return await dataArray.sort((a, b) => parseFloat(b.txFee) - parseFloat(a.txFee));\n      }\n\n      if (orderOfSort === \"ascending\") {\n        return await dataArray.sort((a, b) => parseFloat(a.txFee) - parseFloat(b.txFee));\n      }\n    }\n  };\n\n  const selectOne = async e => {\n    let itemName = e.target.name;\n    let checked = e.target.checked;\n    const newArray = await checkBoxes.map(item => item.type === itemName ? { ...item,\n      isChecked: checked\n    } : item);\n    setCheckBoxes(newArray);\n  };\n\n  const filterDataArray = async dataArray => {\n    const selectedTypes = await checkBoxes.filter(item => {\n      if (item.isChecked) {\n        return item.type;\n      }\n    });\n    const array = await Promise.all(dataArray.filter(async data => {\n      const includes = await selectedTypes.includes(data.typeOfService);\n      debugger;\n\n      if (includes) {\n        return data;\n      }\n    }));\n    return array;\n  };\n\n  useEffect(() => {\n    const renderTableData = async () => {\n      const transactionsArray = await Promise.all(gameData.allTransactions.map(async item => {\n        let {\n          consumer,\n          provider,\n          typeOfService,\n          amountOfService,\n          price,\n          txFee,\n          createdAt\n        } = item;\n        const consumerObject = await gameData.players.filter(player => player._id === consumer);\n        const providerObject = await gameData.players.filter(player => player._id === provider);\n        const timeString = await displayTime(createdAt);\n\n        if (!Array.isArray(providerObject) || !providerObject.length) {\n          return {\n            id: item._id,\n            consumer: consumerObject[0].playerName,\n            provider: \"Blockchain\",\n            typeOfService: typeOfService,\n            amountOfService: amountOfService,\n            price: price,\n            txFee: txFee,\n            type: \"cancel transaction\",\n            createdAt: timeString\n          };\n        }\n\n        return {\n          id: item._id,\n          consumer: consumerObject[0].playerName,\n          provider: providerObject[0].playerName,\n          typeOfService: typeOfService,\n          amountOfService: amountOfService,\n          price: price,\n          txFee: txFee,\n          type: \"cancel transaction\",\n          createdAt: timeString\n        };\n      }));\n      const filteredTransactionsArray = await filterDataArray(transactionsArray);\n      const dataArray = await sortDataArray(filteredTransactionsArray);\n      setTableDataArray(dataArray);\n    };\n\n    renderTableData();\n  }, [gameData]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table-all-transactions-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filter-all-transactions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }\n  }, checkBoxes.map(item => /*#__PURE__*/React.createElement(\"label\", {\n    className: \"checkbox-container\",\n    key: item.type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 29\n    }\n  }, item.type, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: item.type,\n    checked: item.isChecked,\n    onChange: selectOne,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"checkmark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 33\n    }\n  })))), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table-all-transactions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    onClick: () => {\n      setSortBy('time');\n\n      if (orderOfSort === 'ascending') {\n        setOrderOfSort('descending');\n      }\n\n      if (orderOfSort === 'descending') {\n        setOrderOfSort('ascending');\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 25\n    }\n  }, \"Time \", sortBy === 'time' ? orderOfSort === 'ascending' ? /*#__PURE__*/React.createElement(FaArrowUp, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 84\n    }\n  }) : /*#__PURE__*/React.createElement(FaArrowDown, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 99\n    }\n  }) : \"\"), /*#__PURE__*/React.createElement(\"th\", {\n    onClick: () => {\n      setSortBy('consumer');\n\n      if (orderOfSort === 'ascending') {\n        setOrderOfSort('descending');\n      }\n\n      if (orderOfSort === 'descending') {\n        setOrderOfSort('ascending');\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 25\n    }\n  }, \"Consumer \", sortBy === 'consumer' ? orderOfSort === 'ascending' ? /*#__PURE__*/React.createElement(FaArrowUp, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 92\n    }\n  }) : /*#__PURE__*/React.createElement(FaArrowDown, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 107\n    }\n  }) : \"\"), /*#__PURE__*/React.createElement(\"th\", {\n    onClick: () => {\n      setSortBy('provider');\n\n      if (orderOfSort === 'ascending') {\n        setOrderOfSort('descending');\n      }\n\n      if (orderOfSort === 'descending') {\n        setOrderOfSort('ascending');\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 25\n    }\n  }, \"Provider \", sortBy === 'provider' ? orderOfSort === 'ascending' ? /*#__PURE__*/React.createElement(FaArrowUp, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 92\n    }\n  }) : /*#__PURE__*/React.createElement(FaArrowDown, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 107\n    }\n  }) : \"\"), /*#__PURE__*/React.createElement(\"th\", {\n    onClick: () => {\n      setSortBy('typeOfService');\n\n      if (orderOfSort === 'ascending') {\n        setOrderOfSort('descending');\n      }\n\n      if (orderOfSort === 'descending') {\n        setOrderOfSort('ascending');\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 25\n    }\n  }, \"Type of service \", sortBy === 'typeOfService' ? orderOfSort === 'ascending' ? /*#__PURE__*/React.createElement(FaArrowUp, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 104\n    }\n  }) : /*#__PURE__*/React.createElement(FaArrowDown, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 119\n    }\n  }) : \"\"), /*#__PURE__*/React.createElement(\"th\", {\n    onClick: () => {\n      setSortBy('price');\n\n      if (orderOfSort === 'ascending') {\n        setOrderOfSort('descending');\n      }\n\n      if (orderOfSort === 'descending') {\n        setOrderOfSort('ascending');\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 25\n    }\n  }, \"Price/Amount \", sortBy === 'price' ? orderOfSort === 'ascending' ? /*#__PURE__*/React.createElement(FaArrowUp, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 93\n    }\n  }) : /*#__PURE__*/React.createElement(FaArrowDown, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 108\n    }\n  }) : \"\"), /*#__PURE__*/React.createElement(\"th\", {\n    onClick: () => {\n      setSortBy('txFee');\n\n      if (orderOfSort === 'ascending') {\n        setOrderOfSort('descending');\n      }\n\n      if (orderOfSort === 'descending') {\n        setOrderOfSort('ascending');\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 25\n    }\n  }, \"Tx Fee \", sortBy === 'txFee' ? orderOfSort === 'ascending' ? /*#__PURE__*/React.createElement(FaArrowUp, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 87\n    }\n  }) : /*#__PURE__*/React.createElement(FaArrowDown, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 102\n    }\n  }) : \"\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 21\n    }\n  }, tableDataArray.map(item => /*#__PURE__*/React.createElement(\"tr\", {\n    key: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 37\n    }\n  }, item.createdAt), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 37\n    }\n  }, item.consumer), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 37\n    }\n  }, item.provider), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 37\n    }\n  }, item.typeOfService), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 37\n    }\n  }, item.price), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 37\n    }\n  }, item.txFee)))))));\n};\n\nexport default AllTransactionsTable;","map":{"version":3,"sources":["/home/nejc/LDSE/SharedManufacturing/client/src/components/misc/AllTransactionsTable.js"],"names":["React","useState","useEffect","useGlobalContext","FaArrowUp","FaArrowDown","AllTransactionsTable","gameData","tableDataArray","setTableDataArray","sortBy","setSortBy","orderOfSort","setOrderOfSort","checkBoxes","setCheckBoxes","type","isChecked","displayTime","time","createdMillis","Date","toLocaleTimeString","sortDataArray","dataArray","sort","a","b","arrayA","createdAt","split","timeA","parseInt","arrayB","timeB","textA","consumer","toUpperCase","textB","provider","typeOfService","parseFloat","price","txFee","selectOne","e","itemName","target","name","checked","newArray","map","item","filterDataArray","selectedTypes","filter","array","Promise","all","data","includes","renderTableData","transactionsArray","allTransactions","amountOfService","consumerObject","players","player","_id","providerObject","timeString","Array","isArray","length","id","playerName","filteredTransactionsArray"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { useGlobalContext} from \"../../context/context\";\nimport { FaArrowUp, FaArrowDown } from 'react-icons/fa';\n\nconst AllTransactionsTable = () => {\n    const { gameData,  } = useGlobalContext();\n    const [tableDataArray, setTableDataArray] = useState([]);\n    const [sortBy, setSortBy] = useState('time');\n    const [orderOfSort, setOrderOfSort] = useState('ascending');\n    const [checkBoxes, setCheckBoxes] = useState([{type: \"A\", isChecked: false}, {type: \"B\", isChecked: false}, {type: \"C\", isChecked: false}, {type: \"Stake\", isChecked: false}, {type: \"Unstake\", isChecked: false}]);\n\n    const displayTime = async (time) => {\n        const createdMillis = await new Date(time);\n        return createdMillis.toLocaleTimeString('it-IT');\n    };\n\n    const sortDataArray = async (dataArray) => {\n        if (sortBy === 'time') {\n            return await dataArray.sort((a, b) => {\n                let arrayA = a.createdAt.split(\":\");\n                let timeA = (parseInt(arrayA[0], 10) * 60 * 60) + (parseInt(arrayA[1], 10) * 60) + parseInt(arrayA[2], 10);\n                let arrayB = b.createdAt.split(\":\");\n                let timeB = (parseInt(arrayB[0], 10) * 60 * 60) + (parseInt(arrayB[1], 10) * 60) + parseInt(arrayB[2], 10);\n                if (orderOfSort === \"descending\") {\n                    return timeB - timeA;\n                } if (orderOfSort === \"ascending\") {\n                    return timeA - timeB;\n                }\n            });\n        } if (sortBy === 'consumer') {\n            return await dataArray.sort((a, b) => {\n                let textA = a.consumer.toUpperCase();\n                let textB = b.consumer.toUpperCase();\n                if (orderOfSort === \"descending\") {\n                    return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;\n                } if (orderOfSort === \"ascending\") {\n                    return (textA > textB) ? -1 : (textA < textB) ? 1 : 0;\n                }\n            });\n        } if (sortBy === 'provider') {\n            return await dataArray.sort((a, b) => {\n                let textA = a.provider.toUpperCase();\n                let textB = b.provider.toUpperCase();\n                if (orderOfSort === \"descending\") {\n                    return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;\n                } if (orderOfSort === \"ascending\") {\n                    return (textA > textB) ? -1 : (textA < textB) ? 1 : 0;\n                }\n            });\n        } if (sortBy === 'typeOfService') {\n            return await dataArray.sort((a, b) => {\n                let textA = a.typeOfService.toUpperCase();\n                let textB = b.typeOfService.toUpperCase();\n                if (orderOfSort === \"descending\") {\n                    return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;\n                } if (orderOfSort === \"ascending\") {\n                    return (textA > textB) ? -1 : (textA < textB) ? 1 : 0;\n                }\n            });\n        } if (sortBy === 'price') {\n            if (orderOfSort === \"descending\") {\n                return await dataArray.sort((a, b) => parseFloat(b.price) - parseFloat(a.price));\n            } if (orderOfSort === \"ascending\") {\n                return await dataArray.sort((a, b) => parseFloat(a.price) - parseFloat(b.price));\n            }\n        } if (sortBy === 'txFee') {\n            if (orderOfSort === \"descending\") {\n                return await dataArray.sort((a, b) => parseFloat(b.txFee) - parseFloat(a.txFee));\n            } if (orderOfSort === \"ascending\") {\n                return await dataArray.sort((a, b) => parseFloat(a.txFee) - parseFloat(b.txFee));\n            }\n        }\n    };\n\n    const selectOne = async (e) => {\n        let itemName = e.target.name;\n        let checked = e.target.checked;\n        const newArray = await checkBoxes.map(item =>\n            item.type === itemName ? { ...item, isChecked: checked } : item\n        );\n        setCheckBoxes(newArray);\n    };\n\n    const filterDataArray = async (dataArray) => {\n        const selectedTypes = await checkBoxes.filter((item) => {\n            if (item.isChecked) {\n                return item.type;\n            }\n        });\n        const array = await Promise.all(dataArray.filter(async (data) => {\n            const includes = await selectedTypes.includes(data.typeOfService);\n            debugger;\n            if (includes) {\n                return data;\n            }\n        }));\n        return array;\n    };\n\n    useEffect(() => {\n        const renderTableData = async () => {\n            const transactionsArray = await Promise.all(gameData.allTransactions.map(async (item) => {\n                let { consumer, provider, typeOfService, amountOfService, price, txFee, createdAt } = item;\n                const consumerObject = await gameData.players.filter(player => player._id === consumer);\n                const providerObject = await gameData.players.filter(player => player._id === provider);\n                const timeString = await displayTime(createdAt);\n                if (!Array.isArray(providerObject) || !providerObject.length) {\n                    return (\n                        {\n                            id: item._id,\n                            consumer: consumerObject[0].playerName,\n                            provider: \"Blockchain\",\n                            typeOfService: typeOfService,\n                            amountOfService: amountOfService,\n                            price: price,\n                            txFee: txFee,\n                            type: \"cancel transaction\",\n                            createdAt: timeString\n                        }\n                    )\n                }\n                return (\n                    {\n                        id: item._id,\n                        consumer: consumerObject[0].playerName,\n                        provider: providerObject[0].playerName,\n                        typeOfService: typeOfService,\n                        amountOfService: amountOfService,\n                        price: price,\n                        txFee: txFee,\n                        type: \"cancel transaction\",\n                        createdAt: timeString\n                    }\n                )\n            }));\n            const filteredTransactionsArray = await filterDataArray(transactionsArray);\n            const dataArray = await sortDataArray(filteredTransactionsArray);\n            setTableDataArray(dataArray);\n        };\n        renderTableData();\n    }, [gameData]);\n\n\n    return (\n        <>\n            <div className=\"table-all-transactions-container\">\n                <div className=\"filter-all-transactions\">\n                    {\n                        checkBoxes.map((item) => (\n                            <label className=\"checkbox-container\" key={item.type}>{item.type}\n                                <input type=\"checkbox\" name={item.type} checked={item.isChecked} onChange={selectOne}/>\n                                <span className=\"checkmark\"></span>\n                            </label>\n                        ))\n                    }\n                </div>\n                <table className=\"table-all-transactions\">\n                    <thead>\n                    <tr>\n                        <th onClick={() => {\n                            setSortBy('time');\n                            if (orderOfSort === 'ascending') {\n                                setOrderOfSort('descending');\n                            } if (orderOfSort === 'descending') {\n                                setOrderOfSort('ascending');\n                            }\n                        }}>Time {sortBy === 'time' ? orderOfSort === 'ascending' ? <FaArrowUp/> : <FaArrowDown/> : \"\"}</th>\n                        <th onClick={() => {\n                            setSortBy('consumer');\n                            if (orderOfSort === 'ascending') {\n                                setOrderOfSort('descending');\n                            } if (orderOfSort === 'descending') {\n                                setOrderOfSort('ascending');\n                            }\n                        }}>Consumer {sortBy === 'consumer' ? orderOfSort === 'ascending' ? <FaArrowUp/> : <FaArrowDown/> : \"\"}</th>\n                        <th onClick={() => {\n                            setSortBy('provider');\n                            if (orderOfSort === 'ascending') {\n                                setOrderOfSort('descending');\n                            } if (orderOfSort === 'descending') {\n                                setOrderOfSort('ascending');\n                            }\n                        }}>Provider {sortBy === 'provider' ? orderOfSort === 'ascending' ? <FaArrowUp/> : <FaArrowDown/> : \"\"}</th>\n                        <th onClick={() => {\n                            setSortBy('typeOfService');\n                            if (orderOfSort === 'ascending') {\n                                setOrderOfSort('descending');\n                            } if (orderOfSort === 'descending') {\n                                setOrderOfSort('ascending');\n                            }\n                        }}>Type of service {sortBy === 'typeOfService' ? orderOfSort === 'ascending' ? <FaArrowUp/> : <FaArrowDown/> : \"\"}</th>\n                        <th onClick={() => {\n                            setSortBy('price');\n                            if (orderOfSort === 'ascending') {\n                                setOrderOfSort('descending');\n                            } if (orderOfSort === 'descending') {\n                                setOrderOfSort('ascending');\n                            }\n                        }}>Price/Amount {sortBy === 'price' ? orderOfSort === 'ascending' ? <FaArrowUp/> : <FaArrowDown/> : \"\"}</th>\n                        <th onClick={() => {\n                            setSortBy('txFee');\n                            if (orderOfSort === 'ascending') {\n                                setOrderOfSort('descending');\n                            } if (orderOfSort === 'descending') {\n                                setOrderOfSort('ascending');\n                            }\n                        }}>Tx Fee {sortBy === 'txFee' ? orderOfSort === 'ascending' ? <FaArrowUp/> : <FaArrowDown/> : \"\"}</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {\n                        tableDataArray.map((item) =>\n                            (\n                                <tr key={item.id}>\n                                    <td>{item.createdAt}</td>\n                                    <td>{item.consumer}</td>\n                                    <td>{item.provider}</td>\n                                    <td>{item.typeOfService}</td>\n                                    <td>{item.price}</td>\n                                    <td>{item.txFee}</td>\n                                </tr>\n                            )\n                        )\n                    }\n                    </tbody>\n                </table>\n            </div>\n        </>\n    )\n};\n\nexport default AllTransactionsTable"]},"metadata":{},"sourceType":"module"}