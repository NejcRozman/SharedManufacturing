{"ast":null,"code":"var _jsxFileName = \"/home/nejc/LDSE/SharedManufacturing/client/src/components/misc/AllTransactionsTable.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useGlobalContext } from \"../../context/context\";\n\nconst AllTransactionsTable = () => {\n  const {\n    gameData\n  } = useGlobalContext();\n  const [tableDataArray, setTableDataArray] = useState([]);\n  useEffect(() => {\n    const renderTableData = async () => {\n      const transactionsArray = await Promise.all(gameData.allTransactions.map(async item => {\n        let {\n          consumer,\n          provider,\n          typeOfService,\n          amountOfService,\n          price,\n          txFee,\n          createdAt\n        } = item;\n        const consumerObject = await gameData.players.filter(player => player._id === consumer);\n        const providerObject = await gameData.players.filter(player => player._id === provider);\n\n        if (!Array.isArray(providerObject) || !providerObject.length) {\n          return {\n            id: item._id,\n            consumer: consumerObject[0].playerName,\n            provider: \"Blockchain\",\n            typeOfService: typeOfService,\n            amountOfService: amountOfService,\n            price: price,\n            txFee: txFee,\n            type: \"cancel transaction\",\n            createdAt: createdAt\n          };\n        }\n\n        return {\n          id: item._id,\n          consumer: consumerObject[0].playerName,\n          provider: providerObject[0].playerName,\n          typeOfService: typeOfService,\n          amountOfService: amountOfService,\n          price: price,\n          txFee: txFee,\n          type: \"cancel transaction\",\n          createdAt: createdAt\n        };\n      }));\n      setTableDataArray(transactionsArray);\n    };\n\n    renderTableData();\n  }, [gameData]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table-all-transactions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }, \"Time\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }, \"Consumer\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }, \"Provider\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, \"Type of service\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, \"Price/Amount\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }, \"Tx Fee\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, tableDataArray.map(item => /*#__PURE__*/React.createElement(\"tr\", {\n    key: item.id,\n    \"data-tip\": true,\n    \"data-for\": item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 29\n    }\n  }, item.createdAt), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 29\n    }\n  }, item.consumer, \" \\u21C6 \", item.provider), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 29\n    }\n  }, item.txFee))))));\n};\n\nexport default AllTransactionsTable;","map":{"version":3,"sources":["/home/nejc/LDSE/SharedManufacturing/client/src/components/misc/AllTransactionsTable.js"],"names":["React","useState","useEffect","useGlobalContext","AllTransactionsTable","gameData","tableDataArray","setTableDataArray","renderTableData","transactionsArray","Promise","all","allTransactions","map","item","consumer","provider","typeOfService","amountOfService","price","txFee","createdAt","consumerObject","players","filter","player","_id","providerObject","Array","isArray","length","id","playerName","type"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { useGlobalContext} from \"../../context/context\";\n\nconst AllTransactionsTable = () => {\n    const { gameData,  } = useGlobalContext();\n    const [tableDataArray, setTableDataArray] = useState([]);\n\n\n    useEffect(() => {\n        const renderTableData = async () => {\n            const transactionsArray = await Promise.all(gameData.allTransactions.map(async (item) => {\n                let { consumer, provider, typeOfService, amountOfService, price, txFee, createdAt } = item;\n                const consumerObject = await gameData.players.filter(player => player._id === consumer);\n                const providerObject = await gameData.players.filter(player => player._id === provider);\n                if (!Array.isArray(providerObject) || !providerObject.length) {\n                    return (\n                        {\n                            id: item._id,\n                            consumer: consumerObject[0].playerName,\n                            provider: \"Blockchain\",\n                            typeOfService: typeOfService,\n                            amountOfService: amountOfService,\n                            price: price,\n                            txFee: txFee,\n                            type: \"cancel transaction\",\n                            createdAt: createdAt\n                        }\n                    )\n                }\n                return (\n                    {\n                        id: item._id,\n                        consumer: consumerObject[0].playerName,\n                        provider: providerObject[0].playerName,\n                        typeOfService: typeOfService,\n                        amountOfService: amountOfService,\n                        price: price,\n                        txFee: txFee,\n                        type: \"cancel transaction\",\n                        createdAt: createdAt\n                    }\n                )\n            }));\n            setTableDataArray(transactionsArray);\n        };\n        renderTableData();\n    }, [gameData]);\n\n\n    return (\n        <>\n            <table className=\"table-all-transactions\">\n                <thead>\n                <tr>\n                    <th>Time</th>\n                    <th>Consumer</th>\n                    <th>Provider</th>\n                    <th>Type of service</th>\n                    <th>Price/Amount</th>\n                    <th>Tx Fee</th>\n                </tr>\n                </thead>\n                <tbody>\n                {\n                    tableDataArray.map((item) => (\n                        <tr\n                            key={item.id}\n                            data-tip data-for={item.id}\n                        >\n                            <td>{item.createdAt}</td>\n                            <td>\n                                {item.consumer} &#8646; {item.provider}\n                            </td>\n                            <td>{item.txFee}</td>\n                        </tr>\n                    ))\n                }\n                </tbody>\n            </table>\n        </>\n    )\n};\n\nexport default AllTransactionsTable"]},"metadata":{},"sourceType":"module"}