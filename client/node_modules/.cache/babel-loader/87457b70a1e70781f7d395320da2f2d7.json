{"ast":null,"code":"var _jsxFileName = \"/home/nejc/LDSE/SharedManufacturing/client/src/components/pages/Home.js\";\nimport React, { useState, useEffect } from 'react';\nimport { FaBars } from 'react-icons/fa';\nimport { useGlobalContext } from \"../../context/context\";\nimport Sidebar from '../layout/Sidebar';\nimport Modal from '../misc/Modal';\nimport Axios from 'axios';\n\nconst Dashboard = () => {\n  const {\n    openSidebar,\n    playerData,\n    setPlayerData,\n    setModalContent\n  } = useGlobalContext();\n  const [isGameOn, setIsGameOn] = useState(false);\n  const [time, setTime] = useState(Date.now());\n\n  const getData = async () => {\n    try {\n      let token = localStorage.getItem(\"auth-token\");\n      let playerId = localStorage.getItem(\"playerId\");\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    const checkLoggedInAndGame = async () => {\n      let token = localStorage.getItem(\"auth-token\");\n      let playerId = localStorage.getItem(\"playerId\");\n\n      if (token !== (null || \"\") && playerId !== (null || \"\")) {\n        const playerRes = await Axios.get(`http://localhost:8000/player/${playerId}`, {\n          headers: {\n            \"authorization\": \"Bearer \" + token\n          }\n        });\n        setPlayerData({\n          token,\n          player: playerRes.data.player\n        });\n        const gameRes = await Axios.get(`http://localhost:8000/player/isGameOn/${playerId}`, {\n          headers: {\n            \"authorization\": \"Bearer \" + token\n          }\n        });\n        setIsGameOn(gameRes.data.game);\n\n        if (!isGameOn) {\n          setModalContent('Wait for the admin to start the game!');\n        }\n      } else {\n        setModalContent('Please log in!');\n      }\n    };\n\n    checkLoggedInAndGame();\n    const interval = setInterval(() => setTime(Date.now()), 1000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, playerData.player ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 25\n    }\n  }, isGameOn ? /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"sidebar-toggle\",\n    onClick: openSidebar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(FaBars, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 45\n    }\n  }))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Modal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 41\n    }\n  }))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Modal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(Sidebar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/home/nejc/LDSE/SharedManufacturing/client/src/components/pages/Home.js"],"names":["React","useState","useEffect","FaBars","useGlobalContext","Sidebar","Modal","Axios","Dashboard","openSidebar","playerData","setPlayerData","setModalContent","isGameOn","setIsGameOn","time","setTime","Date","now","getData","token","localStorage","getItem","playerId","err","console","log","checkLoggedInAndGame","playerRes","get","headers","player","data","gameRes","game","interval","setInterval","clearInterval"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from 'react'\nimport {FaBars} from 'react-icons/fa'\nimport {useGlobalContext} from \"../../context/context\";\nimport Sidebar from '../layout/Sidebar';\nimport Modal from '../misc/Modal';\nimport Axios from 'axios';\n\nconst Dashboard = () => {\n    const {openSidebar, playerData, setPlayerData, setModalContent} = useGlobalContext();\n    const [isGameOn, setIsGameOn] = useState(false);\n\n    const [time, setTime] = useState(Date.now());\n\n    const getData = async () => {\n        try {\n            let token = localStorage.getItem(\"auth-token\");\n            let playerId = localStorage.getItem(\"playerId\");\n        } catch (err) {\n            console.log(err)\n        }\n    };\n\n    useEffect(() => {\n        const checkLoggedInAndGame = async () => {\n            let token = localStorage.getItem(\"auth-token\");\n            let playerId = localStorage.getItem(\"playerId\");\n            if (token !== (null || \"\") && playerId !== (null || \"\")) {\n                const playerRes = await Axios.get(`http://localhost:8000/player/${playerId}`, {\n                    headers: {\"authorization\": \"Bearer \" + token}\n                });\n                setPlayerData({\n                    token,\n                    player: playerRes.data.player\n                });\n                const gameRes = await Axios.get(`http://localhost:8000/player/isGameOn/${playerId}`, {\n                    headers: {\"authorization\": \"Bearer \" + token}\n                });\n                setIsGameOn(gameRes.data.game);\n                if (!isGameOn) {\n                    setModalContent('Wait for the admin to start the game!');\n                }\n            } else {\n                setModalContent('Please log in!');\n            }\n        };\n        checkLoggedInAndGame();\n        const interval = setInterval(() => setTime(Date.now()), 1000);\n        return () => {\n            clearInterval(interval);\n        };\n    }, []);\n\n    return (\n        <div>\n            <div>\n                {\n                    playerData.player ? (\n                        <div>\n                            {\n                                isGameOn ? (\n                                    <main>\n                                        <button className=\"sidebar-toggle\" onClick={openSidebar}>\n                                            <FaBars/>\n                                        </button>\n                                    </main>\n                                ) : (\n                                    <>\n                                        <Modal/>\n                                    </>\n                                )\n                            }\n                        </div>\n\n                    ) : (\n                        <>\n                            <Modal/>\n                        </>\n                    )\n                }\n            </div>\n            <Sidebar/>\n        </div>\n    )\n};\n\nexport default Dashboard"]},"metadata":{},"sourceType":"module"}