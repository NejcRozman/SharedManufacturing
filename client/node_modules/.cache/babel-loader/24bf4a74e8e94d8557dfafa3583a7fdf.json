{"ast":null,"code":"var _jsxFileName = \"/home/nejc/LDSE/SharedManufacturing/client/src/context/context.js\";\nimport React, { useState, useContext } from 'react';\nconst AppContext = React.createContext();\n\nconst AppProvider = ({\n  children\n}) => {\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openSidebar = () => {\n    setIsSidebarOpen(true);\n  };\n\n  const closeSidebar = () => {\n    setIsSidebarOpen(false);\n  };\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(AppContext.Provider, {\n    value: {\n      isModalOpen,\n      isSidebarOpen,\n      openModal,\n      openSidebar,\n      closeModal,\n      closeSidebar\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, children);\n};\n\nexport const useGlobalContext = () => {\n  return useContext(AppContext);\n};\nexport { AppContext, AppProvider };","map":{"version":3,"sources":["/home/nejc/LDSE/SharedManufacturing/client/src/context/context.js"],"names":["React","useState","useContext","AppContext","createContext","AppProvider","children","isSidebarOpen","setIsSidebarOpen","isModalOpen","setIsModalOpen","openSidebar","closeSidebar","openModal","closeModal","useGlobalContext"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AAEA,MAAMC,UAAU,GAAGH,KAAK,CAACI,aAAN,EAAnB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAChC,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCP,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,KAAD,CAA9C;;AAEA,QAAMU,WAAW,GAAG,MAAM;AACtBH,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACH,GAFD;;AAGA,QAAMI,YAAY,GAAG,MAAM;AACvBJ,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACH,GAFD;;AAGA,QAAMK,SAAS,GAAG,MAAM;AACpBH,IAAAA,cAAc,CAAC,IAAD,CAAd;AACH,GAFD;;AAGA,QAAMI,UAAU,GAAG,MAAM;AACrBJ,IAAAA,cAAc,CAAC,KAAD,CAAd;AACH,GAFD;;AAKA,sBACI,oBAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAE;AACxBD,MAAAA,WADwB;AAExBF,MAAAA,aAFwB;AAGxBM,MAAAA,SAHwB;AAIxBF,MAAAA,WAJwB;AAKxBG,MAAAA,UALwB;AAMxBF,MAAAA;AANwB,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQKN,QARL,CADJ;AAYH,CA9BD;;AAgCA,OAAO,MAAMS,gBAAgB,GAAG,MAAM;AAClC,SAAOb,UAAU,CAACC,UAAD,CAAjB;AACH,CAFM;AAIP,SAAQA,UAAR,EAAoBE,WAApB","sourcesContent":["import React, { useState, useContext } from 'react'\n\nconst AppContext = React.createContext();\n\nconst AppProvider = ({children}) => {\n    const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n    const [isModalOpen, setIsModalOpen] = useState(false);\n\n    const openSidebar = () => {\n        setIsSidebarOpen(true);\n    };\n    const closeSidebar = () => {\n        setIsSidebarOpen(false);\n    };\n    const openModal = () => {\n        setIsModalOpen(true);\n    };\n    const closeModal = () => {\n        setIsModalOpen(false);\n    };\n\n\n    return (\n        <AppContext.Provider value={{\n            isModalOpen,\n            isSidebarOpen,\n            openModal,\n            openSidebar,\n            closeModal,\n            closeSidebar\n        }}>\n            {children}\n        </AppContext.Provider>\n    )\n};\n\nexport const useGlobalContext = () => {\n    return useContext(AppContext)\n};\n\nexport {AppContext, AppProvider}"]},"metadata":{},"sourceType":"module"}