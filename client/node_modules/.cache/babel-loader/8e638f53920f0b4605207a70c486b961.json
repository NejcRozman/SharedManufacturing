{"ast":null,"code":"var _jsxFileName = \"/home/nejc/LDSE/SharedManufacturing/client/src/components/misc/TradeCards.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useGlobalContext } from \"../../context/context\";\n\nconst TradeCards = () => {\n  const {\n    gameData\n  } = useGlobalContext();\n  const [pendingTrades, setPendingTrades] = useState([]);\n  const [requestedTrades, setRequestedTrades] = useState([]);\n\n  function millisToMinutesAndSeconds(millis) {\n    let d = new Date(1000 * Math.round(millis / 1000));\n\n    if (d.getUTCMinutes() === 0) {\n      return d.getUTCSeconds() + 's';\n    } else {\n      return d.getUTCMinutes() + 'min ' + d.getUTCSeconds() + 's';\n    }\n  }\n\n  useEffect(() => {\n    const setDataArrays = async () => {\n      const pendingArray = await Promise.all(gameData.pendingTrades.map(async item => {\n        const {\n          _id,\n          consumer,\n          provider,\n          typeOfService,\n          amountOfService,\n          price,\n          txFee,\n          createdAt\n        } = item;\n        console.log(createdAt);\n        const timeLeft = 300000 - (Date.now() - createdAt);\n        const width = await Math.floor((1 - (Date.now() - createdAt) / 300000) * 100);\n        const consumerObject = await gameData.players.filter(player => player._id === consumer);\n        const providerObject = await gameData.players.filter(player => player._id === provider);\n        return {\n          id: _id,\n          consumer: consumerObject[0].playerName,\n          provider: providerObject[0].playerName,\n          typeOfService: typeOfService,\n          amountOfService: amountOfService,\n          price: price,\n          txFee: txFee,\n          timeLeft: timeLeft,\n          width: width\n        };\n      }));\n      await pendingArray.sort((a, b) => parseInt(a.width) - parseInt(b.width));\n      const requestedArray = await Promise.all(gameData.requestedTrades.map(async item => {\n        const {\n          _id,\n          consumer,\n          provider,\n          typeOfService,\n          amountOfService,\n          price,\n          txFee,\n          createdAt\n        } = item;\n        const timeLeft = 300000 - (Date.now() - createdAt.getTime());\n        const width = await Math.floor((1 - (Date.now() - createdAt.getTime()) / 300000) * 100);\n        const consumerObject = await gameData.players.filter(player => player._id === consumer);\n        const providerObject = await gameData.players.filter(player => player._id === provider);\n        return {\n          id: _id,\n          consumer: consumerObject[0].playerName,\n          provider: providerObject[0].playerName,\n          typeOfService: typeOfService,\n          amountOfService: amountOfService,\n          price: price,\n          txFee: txFee,\n          timeLeft: timeLeft,\n          width: width\n        };\n      }));\n      await requestedArray.sort((a, b) => parseInt(a.width) - parseInt(b.width));\n      setPendingTrades(pendingArray);\n      setRequestedTrades(requestedArray);\n    };\n\n    setDataArrays();\n  }, [gameData]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"trade-cards-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pending-trades-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, pendingTrades.map(item => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pending-trades-card\",\n    key: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"time-progress-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"time-progress\",\n    style: {\n      width: `${item.width}%`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"time-progress-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 37\n    }\n  }, \"Time left: \", millisToMinutesAndSeconds(item.timeLeft))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pending-trades-card-first-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 37\n    }\n  }, item.consumer, \" \\u21C6 \", item.provider)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pending-trades-card-second-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 37\n    }\n  }, \"Service: \", item.typeOfService), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 37\n    }\n  }, \"Price: \", item.price, \"$\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 37\n    }\n  }, \"Tx Fee: \", item.txFee, \"$\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pending-trades-card-third-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"trade-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 37\n    }\n  }, \"Cancel\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"requested-trades-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, requestedTrades.map(item => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"requested-trades-card\",\n    key: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"time-progress-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"time-progress\",\n    style: {\n      width: `${item.width}%`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"time-progress-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 37\n    }\n  }, \"Time left: \", millisToMinutesAndSeconds(item.timeLeft))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"requested-trades-card-first-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 37\n    }\n  }, item.consumer, \" \\u21C6 \", item.provider)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"requested-trades-card-second-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 37\n    }\n  }, \"Price: \", item.price, \"$\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 37\n    }\n  }, \"Tx Fee: \", item.txFee, \"$\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"requested-trades-card-third-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"trade-accept-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 37\n    }\n  }, \"Accept\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"trade-reject-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 37\n    }\n  }, \"Reject\")))))));\n};\n\nexport default TradeCards;","map":{"version":3,"sources":["/home/nejc/LDSE/SharedManufacturing/client/src/components/misc/TradeCards.js"],"names":["React","useState","useEffect","useGlobalContext","TradeCards","gameData","pendingTrades","setPendingTrades","requestedTrades","setRequestedTrades","millisToMinutesAndSeconds","millis","d","Date","Math","round","getUTCMinutes","getUTCSeconds","setDataArrays","pendingArray","Promise","all","map","item","_id","consumer","provider","typeOfService","amountOfService","price","txFee","createdAt","console","log","timeLeft","now","width","floor","consumerObject","players","filter","player","providerObject","id","playerName","sort","a","b","parseInt","requestedArray","getTime"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { useGlobalContext} from \"../../context/context\";\n\n\nconst TradeCards = () => {\n    const { gameData } = useGlobalContext();\n    const [pendingTrades, setPendingTrades] = useState([]);\n    const [requestedTrades, setRequestedTrades] = useState([]);\n\n    function millisToMinutesAndSeconds(millis) {\n        let d = new Date(1000*Math.round(millis/1000));\n        if (d.getUTCMinutes() === 0) {\n            return ( d.getUTCSeconds() + 's' );\n        } else {\n            return ( d.getUTCMinutes() + 'min ' + d.getUTCSeconds() + 's' );\n        }\n    }\n\n    useEffect(() => {\n        const setDataArrays = async () => {\n            const pendingArray = await Promise.all(gameData.pendingTrades.map(async (item) => {\n                const { _id, consumer, provider, typeOfService, amountOfService, price, txFee, createdAt } = item;\n                console.log(createdAt);\n                const timeLeft = 300000 - (Date.now() - createdAt);\n                const width = await Math.floor((1 - ((Date.now() - createdAt) / 300000)) * 100);\n                const consumerObject = await gameData.players.filter(player => player._id === consumer);\n                const providerObject = await gameData.players.filter(player => player._id === provider);\n                return (\n                    {\n                        id: _id,\n                        consumer: consumerObject[0].playerName,\n                        provider: providerObject[0].playerName,\n                        typeOfService: typeOfService,\n                        amountOfService: amountOfService,\n                        price: price,\n                        txFee: txFee,\n                        timeLeft: timeLeft,\n                        width: width\n                    }\n                )\n            }));\n            await pendingArray.sort((a, b) => parseInt(a.width) - parseInt(b.width));\n            const requestedArray = await Promise.all(gameData.requestedTrades.map(async (item) => {\n                const { _id, consumer, provider, typeOfService, amountOfService, price, txFee, createdAt } = item;\n                const timeLeft = 300000 - (Date.now() - createdAt.getTime());\n                const width = await Math.floor((1 - ((Date.now() - createdAt.getTime()) / 300000)) * 100);\n                const consumerObject = await gameData.players.filter(player => player._id === consumer);\n                const providerObject = await gameData.players.filter(player => player._id === provider);\n                return (\n                    {\n                        id: _id,\n                        consumer: consumerObject[0].playerName,\n                        provider: providerObject[0].playerName,\n                        typeOfService: typeOfService,\n                        amountOfService: amountOfService,\n                        price: price,\n                        txFee: txFee,\n                        timeLeft: timeLeft,\n                        width: width\n                    }\n                )\n            }));\n            await requestedArray.sort((a, b) => parseInt(a.width) - parseInt(b.width));\n            setPendingTrades(pendingArray);\n            setRequestedTrades(requestedArray);\n        };\n        setDataArrays();\n    }, [gameData]);\n\n\n    return (\n        <>\n            <div className=\"trade-cards-container\">\n                <div className=\"pending-trades-container\">\n                    {\n                        pendingTrades.map((item) => (\n                            <div className=\"pending-trades-card\" key={item.id}>\n                                <div className=\"time-progress-container\">\n                                    <div className=\"time-progress\" style={{width: `${item.width}%`}}></div>\n                                    <span className=\"time-progress-text\">\n                                        Time left: {millisToMinutesAndSeconds(item.timeLeft)}\n                                    </span>\n                                </div>\n                                <div className=\"pending-trades-card-first-row\">\n                                    <p>{item.consumer} &#8646; {item.provider}</p>\n                                </div>\n                                <div className=\"pending-trades-card-second-row\">\n                                    <p>Service: {item.typeOfService}</p>\n                                    <p>Price: {item.price}$</p>\n                                    <p>Tx Fee: {item.txFee}$</p>\n                                </div>\n                                <div className=\"pending-trades-card-third-row\">\n                                    <button type=\"button\" className=\"trade-btn\">\n                                        Cancel\n                                    </button>\n                                </div>\n                            </div>\n                        ))\n                    }\n                </div>\n                <div className=\"requested-trades-container\">\n                    {\n                        requestedTrades.map((item) => (\n                            <div className=\"requested-trades-card\" key={item.id}>\n                                <div className=\"time-progress-container\">\n                                    <div className=\"time-progress\" style={{width: `${item.width}%`}}></div>\n                                    <span className=\"time-progress-text\">\n                                        Time left: {millisToMinutesAndSeconds(item.timeLeft)}\n                                    </span>\n                                </div>\n                                <div className=\"requested-trades-card-first-row\">\n                                    <p>{item.consumer} &#8646; {item.provider}</p>\n                                </div>\n                                <div className=\"requested-trades-card-second-row\">\n                                    <p>Price: {item.price}$</p>\n                                    <p>Tx Fee: {item.txFee}$</p>\n                                </div>\n                                <div className=\"requested-trades-card-third-row\">\n                                    <button type=\"button\" className=\"trade-accept-btn\">\n                                        Accept\n                                    </button>\n                                    <button type=\"button\" className=\"trade-reject-btn\">\n                                        Reject\n                                    </button>\n                                </div>\n                            </div>\n                        ))\n                    }\n                </div>\n            </div>\n        </>\n    )\n};\n\nexport default TradeCards"]},"metadata":{},"sourceType":"module"}