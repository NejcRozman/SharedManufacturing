{"ast":null,"code":"var _jsxFileName = \"/home/nejc/LDSE/SharedManufacturing/client/src/components/misc/Trades.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useGlobalContext } from \"../../context/context\";\nimport BarChart from '../misc/BarChart';\n\nconst Trade = () => {\n  const {\n    gameData\n  } = useGlobalContext();\n  const [dataArray1, setDataArray1] = useState([]);\n  const [dataArray2, setDataArray2] = useState([]);\n  const [dataArray3, setDataArray3] = useState([]);\n  useEffect(() => {\n    const sortDataArrays = async () => {\n      let array1 = await gameData.orders.filter(item => item.typeOfService === gameData.player.typeOfOtherService1);\n      let array2 = await gameData.orders.filter(item => item.typeOfService === gameData.player.typeOfOtherService2);\n      let array3 = await gameData.orders.filter(item => item.typeOfService === gameData.player.typeOfService);\n      await array1.forEach(item => {\n        item.price = parseInt(item.price);\n      });\n      await array2.forEach(item => {\n        item.price = parseInt(item.price);\n      });\n      await array3.forEach(item => {\n        item.price = parseInt(item.price);\n      });\n      let namesArray1 = [];\n\n      for (const item of array1) {\n        if (!(await namesArray1.includes(item.playerName))) {\n          await namesArray1.push(item.playerName);\n        }\n      }\n\n      let finalArray1 = await Promise.all(namesArray1.map(async item => {\n        let index = 0;\n        let orders = await array1.filter(order => order.playerName === item);\n        orders = await orders.map(order => {\n          index = index + 1;\n          order.playerName = order.playerName + index.toString();\n          return order;\n        });\n        return orders;\n      }));\n      await finalArray1.sort((a, b) => parseInt(a.price) - parseInt(b.price));\n      await array2.sort((a, b) => parseInt(a.price) - parseInt(b.price));\n      await array3.sort((a, b) => parseInt(a.price) - parseInt(b.price));\n      setDataArray1(finalArray1);\n      setDataArray2(array2);\n      setDataArray3(array3);\n    };\n\n    sortDataArrays();\n  }, [gameData]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"trades-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"other-services-trade-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chart-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chart-container-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 29\n    }\n  }, \"Service \", `${gameData.player.typeOfOtherService1}`)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chart-container-chart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(BarChart, {\n    data: dataArray1,\n    scheme: 'category10',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chart-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chart-container-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 29\n    }\n  }, \"Service \", `${gameData.player.typeOfOtherService2}`)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chart-container-chart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(BarChart, {\n    data: dataArray2,\n    scheme: 'dark2',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"my-service-trade-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chart-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chart-container-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 29\n    }\n  }, \"Service \", `${gameData.player.typeOfService}`)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chart-container-chart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(BarChart, {\n    data: dataArray3,\n    scheme: 'category10',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 29\n    }\n  }))))));\n};\n\nexport default Trade;","map":{"version":3,"sources":["/home/nejc/LDSE/SharedManufacturing/client/src/components/misc/Trades.js"],"names":["React","useState","useEffect","useGlobalContext","BarChart","Trade","gameData","dataArray1","setDataArray1","dataArray2","setDataArray2","dataArray3","setDataArray3","sortDataArrays","array1","orders","filter","item","typeOfService","player","typeOfOtherService1","array2","typeOfOtherService2","array3","forEach","price","parseInt","namesArray1","includes","playerName","push","finalArray1","Promise","all","map","index","order","toString","sort","a","b"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport { useGlobalContext} from \"../../context/context\";\nimport BarChart from '../misc/BarChart';\n\n\nconst Trade = () => {\n    const { gameData } = useGlobalContext();\n    const [dataArray1, setDataArray1] = useState([]);\n    const [dataArray2, setDataArray2] = useState([]);\n    const [dataArray3, setDataArray3] = useState([]);\n\n    useEffect(() => {\n        const sortDataArrays = async () => {\n            let array1 = await gameData.orders.filter(item => item.typeOfService === gameData.player.typeOfOtherService1);\n            let array2 = await gameData.orders.filter(item => item.typeOfService === gameData.player.typeOfOtherService2);\n            let array3 = await gameData.orders.filter(item => item.typeOfService === gameData.player.typeOfService);\n            await array1.forEach((item) => {\n                item.price = parseInt(item.price);\n            });\n            await array2.forEach((item) => {\n                item.price = parseInt(item.price);\n            });\n            await array3.forEach((item) => {\n                item.price = parseInt(item.price);\n            });\n\n            let namesArray1 = [];\n\n            for (const item of array1) {\n                if (! await namesArray1.includes(item.playerName)) {\n                    await namesArray1.push(item.playerName);\n                }\n            }\n\n            let finalArray1 = await Promise.all(namesArray1.map( async (item) => {\n                let index = 0;\n                let orders = await array1.filter(order => order.playerName === item);\n                orders = await orders.map((order) => {\n                    index = index +1;\n                    order.playerName = order.playerName+(index).toString();\n                    return order;\n                });\n                return orders;\n            }));\n\n\n\n            await finalArray1.sort((a, b) => parseInt(a.price) - parseInt(b.price));\n            await array2.sort((a, b) => parseInt(a.price) - parseInt(b.price));\n            await array3.sort((a, b) => parseInt(a.price) - parseInt(b.price));\n            setDataArray1(finalArray1);\n            setDataArray2(array2);\n            setDataArray3(array3);\n        };\n        sortDataArrays();\n    }, [gameData]);\n\n    return (\n        <>\n            <div className=\"trades-container\">\n                <div className=\"other-services-trade-container\">\n                    <div className=\"chart-container\">\n                        <div className=\"chart-container-text\">\n                            <h3>Service {`${gameData.player.typeOfOtherService1}`}</h3>\n                        </div>\n                        <div className=\"chart-container-chart\">\n                            <BarChart data={dataArray1} scheme={'category10'}/>\n                        </div>\n                    </div>\n                    <div className=\"chart-container\">\n                        <div className=\"chart-container-text\">\n                            <h3>Service {`${gameData.player.typeOfOtherService2}`}</h3>\n                        </div>\n                        <div className=\"chart-container-chart\">\n                            <BarChart data={dataArray2} scheme={'dark2'}/>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"my-service-trade-container\">\n                    <div className=\"chart-container\">\n                        <div className=\"chart-container-text\">\n                            <h3>Service {`${gameData.player.typeOfService}`}</h3>\n                        </div>\n                        <div className=\"chart-container-chart\">\n                            <BarChart data={dataArray3} scheme={'category10'}/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n};\n\nexport default Trade"]},"metadata":{},"sourceType":"module"}