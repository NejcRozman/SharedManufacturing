{"ast":null,"code":"var _jsxFileName = \"/home/nejc/LDSE/SharedManufacturing/client/src/components/misc/TradeCards.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useGlobalContext } from \"../../context/context\";\n\nconst TradeCards = () => {\n  const {\n    gameData\n  } = useGlobalContext();\n  const [pendingTrades, setPendingTrades] = useState([]);\n  const [requestedTrades, setRequestedTrades] = useState([]);\n\n  function millisToMinutesAndSeconds(millis) {\n    let d = new Date(1000 * Math.round(millis / 1000));\n\n    if (d.getUTCMinutes() === 0) {\n      return d.getUTCSeconds() + 's';\n    } else {\n      return d.getUTCMinutes() + 'min ' + d.getUTCSeconds() + 's';\n    }\n  }\n\n  useEffect(() => {\n    const setDataArrays = async () => {\n      const pendingArray = await Promise.all(gameData.pendingTrades.map(async item => {\n        const {\n          _id,\n          consumer,\n          provider,\n          typeOfService,\n          amountOfService,\n          price,\n          txFee,\n          createdAt\n        } = item;\n        const createdMillis = await new Date(createdAt).getTime();\n        const timeLeft = 300000 - (Date.now() - createdMillis);\n\n        if (timeLeft > 0) {\n          const width = await Math.floor((1 - (Date.now() - createdMillis) / 300000) * 100);\n          const consumerObject = await gameData.players.filter(player => player._id === consumer);\n          const providerObject = await gameData.players.filter(player => player._id === provider);\n          return {\n            id: _id,\n            consumer: consumerObject[0].playerName,\n            provider: providerObject[0].playerName,\n            typeOfService: typeOfService,\n            amountOfService: amountOfService,\n            price: price,\n            txFee: txFee,\n            timeLeft: timeLeft,\n            width: width\n          };\n        }\n      }));\n\n      if (!Array.isArray(pendingArray) || !pendingArray.length) {\n        setPendingTrades([]);\n      } else {\n        await pendingArray.sort((a, b) => parseInt(a.width) - parseInt(b.width));\n        setPendingTrades(pendingArray);\n      }\n\n      const requestedArray = await Promise.all(gameData.requestedTrades.map(async item => {\n        const {\n          _id,\n          consumer,\n          provider,\n          typeOfService,\n          amountOfService,\n          price,\n          txFee,\n          createdAt\n        } = item;\n        const createdMillis = await new Date(createdAt).getTime();\n        const timeLeft = 300000 - (Date.now() - createdMillis);\n\n        if (timeLeft > 0) {\n          const width = await Math.floor((1 - (Date.now() - createdMillis) / 300000) * 100);\n          const consumerObject = await gameData.players.filter(player => player._id === consumer);\n          const providerObject = await gameData.players.filter(player => player._id === provider);\n          return {\n            id: _id,\n            consumer: consumerObject[0].playerName,\n            provider: providerObject[0].playerName,\n            typeOfService: typeOfService,\n            amountOfService: amountOfService,\n            price: price,\n            txFee: txFee,\n            timeLeft: timeLeft,\n            width: width\n          };\n        }\n      }));\n\n      if (!Array.isArray(requestedArray) || !requestedArray.length) {\n        setRequestedTrades([]);\n      } else {\n        await requestedArray.sort((a, b) => parseInt(a.width) - parseInt(b.width));\n        setPendingTrades(requestedArray);\n      }\n    };\n\n    setDataArrays();\n  }, [gameData]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"trade-cards-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pending-trades-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, pendingTrades.map(item => {\n    if (item !== undefined) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pending-trades-card\",\n        key: item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"time-progress-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"time-progress\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"time-progress-filler\",\n        style: {\n          width: `${item.width}%`\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 49\n        }\n      })), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"time-progress-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 45\n        }\n      }, \"Time left: \", millisToMinutesAndSeconds(item.timeLeft))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pending-trades-card-first-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 45\n        }\n      }, item.consumer, \" \\u21C6 \", item.provider)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pending-trades-card-second-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 45\n        }\n      }, \"Service: \", item.typeOfService), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 45\n        }\n      }, \"Price: \", item.price, \"$\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 45\n        }\n      }, \"Tx Fee: \", item.txFee, \"$\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pending-trades-card-third-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"trade-btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 45\n        }\n      }, \"Cancel\")));\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"requested-trades-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }, requestedTrades.map(item => {\n    if (item !== undefined) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"requested-trades-card\",\n        key: item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"time-progress-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"time-progress\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"time-progress-filler\",\n        style: {\n          width: `${item.width}%`\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 49\n        }\n      })), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"time-progress-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 45\n        }\n      }, \"Time left: \", millisToMinutesAndSeconds(item.timeLeft))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"requested-trades-card-first-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 45\n        }\n      }, item.consumer, \" \\u21C6 \", item.provider)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"requested-trades-card-second-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 45\n        }\n      }, \"Price: \", item.price, \"$\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 45\n        }\n      }, \"Tx Fee: \", item.txFee, \"$\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"requested-trades-card-third-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"trade-accept-btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 45\n        }\n      }, \"Accept\"), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"trade-reject-btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 45\n        }\n      }, \"Reject\")));\n    }\n  }))));\n};\n\nexport default TradeCards;","map":{"version":3,"sources":["/home/nejc/LDSE/SharedManufacturing/client/src/components/misc/TradeCards.js"],"names":["React","useState","useEffect","useGlobalContext","TradeCards","gameData","pendingTrades","setPendingTrades","requestedTrades","setRequestedTrades","millisToMinutesAndSeconds","millis","d","Date","Math","round","getUTCMinutes","getUTCSeconds","setDataArrays","pendingArray","Promise","all","map","item","_id","consumer","provider","typeOfService","amountOfService","price","txFee","createdAt","createdMillis","getTime","timeLeft","now","width","floor","consumerObject","players","filter","player","providerObject","id","playerName","Array","isArray","length","sort","a","b","parseInt","requestedArray","undefined"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { useGlobalContext} from \"../../context/context\";\n\n\nconst TradeCards = () => {\n    const { gameData } = useGlobalContext();\n    const [pendingTrades, setPendingTrades] = useState([]);\n    const [requestedTrades, setRequestedTrades] = useState([]);\n\n    function millisToMinutesAndSeconds(millis) {\n        let d = new Date(1000*Math.round(millis/1000));\n        if (d.getUTCMinutes() === 0) {\n            return ( d.getUTCSeconds() + 's' );\n        } else {\n            return ( d.getUTCMinutes() + 'min ' + d.getUTCSeconds() + 's' );\n        }\n    }\n\n    useEffect(() => {\n        const setDataArrays = async () => {\n            const pendingArray = await Promise.all(gameData.pendingTrades.map(async (item) => {\n                const { _id, consumer, provider, typeOfService, amountOfService, price, txFee, createdAt } = item;\n                const createdMillis = await new Date(createdAt).getTime();\n                const timeLeft = 300000 - (Date.now() - createdMillis);\n                if (timeLeft > 0) {\n                    const width = await Math.floor((1 - ((Date.now() - createdMillis) / 300000)) * 100);\n                    const consumerObject = await gameData.players.filter(player => player._id === consumer);\n                    const providerObject = await gameData.players.filter(player => player._id === provider);\n                    return (\n                        {\n                            id: _id,\n                            consumer: consumerObject[0].playerName,\n                            provider: providerObject[0].playerName,\n                            typeOfService: typeOfService,\n                            amountOfService: amountOfService,\n                            price: price,\n                            txFee: txFee,\n                            timeLeft: timeLeft,\n                            width: width\n                        }\n                    )\n                }\n            }));\n            if (!Array.isArray(pendingArray) || !pendingArray.length) {\n                setPendingTrades([]);\n            } else {\n                await pendingArray.sort((a, b) => parseInt(a.width) - parseInt(b.width));\n                setPendingTrades(pendingArray);\n            }\n\n            const requestedArray = await Promise.all(gameData.requestedTrades.map(async (item) => {\n                const { _id, consumer, provider, typeOfService, amountOfService, price, txFee, createdAt } = item;\n                const createdMillis = await new Date(createdAt).getTime();\n                const timeLeft = 300000 - (Date.now() - createdMillis);\n                if (timeLeft > 0) {\n                    const width = await Math.floor((1 - ((Date.now() - createdMillis) / 300000)) * 100);\n                    const consumerObject = await gameData.players.filter(player => player._id === consumer);\n                    const providerObject = await gameData.players.filter(player => player._id === provider);\n                    return (\n                        {\n                            id: _id,\n                            consumer: consumerObject[0].playerName,\n                            provider: providerObject[0].playerName,\n                            typeOfService: typeOfService,\n                            amountOfService: amountOfService,\n                            price: price,\n                            txFee: txFee,\n                            timeLeft: timeLeft,\n                            width: width\n                        }\n                    )\n                }\n            }));\n            if (!Array.isArray(requestedArray) || !requestedArray.length) {\n                setRequestedTrades([]);\n            } else {\n                await requestedArray.sort((a, b) => parseInt(a.width) - parseInt(b.width));\n                setPendingTrades(requestedArray);\n            }\n        };\n        setDataArrays();\n    }, [gameData]);\n\n\n    return (\n        <>\n            <div className=\"trade-cards-container\">\n                <div className=\"pending-trades-container\">\n                    {\n                        pendingTrades.map((item) => {\n                            if (item !== undefined) {\n                                return (\n                                    <div className=\"pending-trades-card\" key={item.id}>\n                                        <div className=\"time-progress-container\">\n                                            <div className=\"time-progress\">\n                                                <div className=\"time-progress-filler\" style={{width: `${item.width}%`}}></div>\n                                            </div>\n                                            <span className=\"time-progress-text\">\n                                        Time left: {millisToMinutesAndSeconds(item.timeLeft)}\n                                    </span>\n                                        </div>\n                                        <div className=\"pending-trades-card-first-row\">\n                                            <p>{item.consumer} &#8646; {item.provider}</p>\n                                        </div>\n                                        <div className=\"pending-trades-card-second-row\">\n                                            <p>Service: {item.typeOfService}</p>\n                                            <p>Price: {item.price}$</p>\n                                            <p>Tx Fee: {item.txFee}$</p>\n                                        </div>\n                                        <div className=\"pending-trades-card-third-row\">\n                                            <button type=\"button\" className=\"trade-btn\">\n                                                Cancel\n                                            </button>\n                                        </div>\n                                    </div>\n                                )\n                            }\n                        })\n                    }\n                </div>\n                <div className=\"requested-trades-container\">\n                    {\n                        requestedTrades.map((item) => {\n                            if (item !== undefined) {\n                                return (\n                                    <div className=\"requested-trades-card\" key={item.id}>\n                                        <div className=\"time-progress-container\">\n                                            <div className=\"time-progress\">\n                                                <div className=\"time-progress-filler\" style={{width: `${item.width}%`}}></div>\n                                            </div>\n                                            <span className=\"time-progress-text\">\n                                        Time left: {millisToMinutesAndSeconds(item.timeLeft)}\n                                    </span>\n                                        </div>\n                                        <div className=\"requested-trades-card-first-row\">\n                                            <p>{item.consumer} &#8646; {item.provider}</p>\n                                        </div>\n                                        <div className=\"requested-trades-card-second-row\">\n                                            <p>Price: {item.price}$</p>\n                                            <p>Tx Fee: {item.txFee}$</p>\n                                        </div>\n                                        <div className=\"requested-trades-card-third-row\">\n                                            <button type=\"button\" className=\"trade-accept-btn\">\n                                                Accept\n                                            </button>\n                                            <button type=\"button\" className=\"trade-reject-btn\">\n                                                Reject\n                                            </button>\n                                        </div>\n                                    </div>\n                                )\n                            }\n                        })\n                    }\n                </div>\n            </div>\n        </>\n    )\n};\n\nexport default TradeCards"]},"metadata":{},"sourceType":"module"}