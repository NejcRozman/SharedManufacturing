{"ast":null,"code":"var _jsxFileName = \"/home/nejc/LDSE/SharedManufacturing/client/src/components/misc/AllTransactionsTable.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useGlobalContext } from \"../../context/context\";\nimport { FaArrowUp, FaArrowDown } from 'react-icons/fa';\n\nconst AllTransactionsTable = () => {\n  const {\n    gameData\n  } = useGlobalContext();\n  const [tableDataArray, setTableDataArray] = useState([]);\n  const [sortBy, setSortBy] = useState('time');\n  const [orderOfSort, setOrderOfSort] = useState('ascending');\n  const [checkBoxes, setCheckBoxes] = useState([]);\n\n  const displayTime = async time => {\n    const createdMillis = await new Date(time);\n    return createdMillis.toLocaleTimeString('it-IT');\n  };\n\n  const sortDataArray = async dataArray => {\n    if (sortBy === 'time') {\n      return await dataArray.sort((a, b) => {\n        let arrayA = a.createdAt.split(\":\");\n        let timeA = parseInt(arrayA[0], 10) * 60 * 60 + parseInt(arrayA[1], 10) * 60 + parseInt(arrayA[2], 10);\n        let arrayB = b.createdAt.split(\":\");\n        let timeB = parseInt(arrayB[0], 10) * 60 * 60 + parseInt(arrayB[1], 10) * 60 + parseInt(arrayB[2], 10);\n\n        if (orderOfSort === \"descending\") {\n          return timeB - timeA;\n        }\n\n        if (orderOfSort === \"ascending\") {\n          return timeA - timeB;\n        }\n      });\n    }\n\n    if (sortBy === 'consumer') {\n      return await dataArray.sort((a, b) => {\n        let textA = a.consumer.toUpperCase();\n        let textB = b.consumer.toUpperCase();\n\n        if (orderOfSort === \"descending\") {\n          return textA < textB ? -1 : textA > textB ? 1 : 0;\n        }\n\n        if (orderOfSort === \"ascending\") {\n          return textA > textB ? -1 : textA < textB ? 1 : 0;\n        }\n      });\n    }\n\n    if (sortBy === 'provider') {\n      return await dataArray.sort((a, b) => {\n        let textA = a.provider.toUpperCase();\n        let textB = b.provider.toUpperCase();\n\n        if (orderOfSort === \"descending\") {\n          return textA < textB ? -1 : textA > textB ? 1 : 0;\n        }\n\n        if (orderOfSort === \"ascending\") {\n          return textA > textB ? -1 : textA < textB ? 1 : 0;\n        }\n      });\n    }\n\n    if (sortBy === 'typeOfService') {\n      return await dataArray.sort((a, b) => {\n        let textA = a.typeOfService.toUpperCase();\n        let textB = b.typeOfService.toUpperCase();\n\n        if (orderOfSort === \"descending\") {\n          return textA < textB ? -1 : textA > textB ? 1 : 0;\n        }\n\n        if (orderOfSort === \"ascending\") {\n          return textA > textB ? -1 : textA < textB ? 1 : 0;\n        }\n      });\n    }\n\n    if (sortBy === 'price') {\n      if (orderOfSort === \"descending\") {\n        return await dataArray.sort((a, b) => parseFloat(b.price) - parseFloat(a.price));\n      }\n\n      if (orderOfSort === \"ascending\") {\n        return await dataArray.sort((a, b) => parseFloat(a.price) - parseFloat(b.price));\n      }\n    }\n\n    if (sortBy === 'txFee') {\n      if (orderOfSort === \"descending\") {\n        return await dataArray.sort((a, b) => parseFloat(b.txFee) - parseFloat(a.txFee));\n      }\n\n      if (orderOfSort === \"ascending\") {\n        return await dataArray.sort((a, b) => parseFloat(a.txFee) - parseFloat(b.txFee));\n      }\n    }\n  };\n\n  useEffect(() => {\n    const renderTableData = async () => {\n      const transactionsArray = await Promise.all(gameData.allTransactions.map(async item => {\n        let {\n          consumer,\n          provider,\n          typeOfService,\n          amountOfService,\n          price,\n          txFee,\n          createdAt\n        } = item;\n        const consumerObject = await gameData.players.filter(player => player._id === consumer);\n        const providerObject = await gameData.players.filter(player => player._id === provider);\n        const timeString = await displayTime(createdAt);\n\n        if (!Array.isArray(providerObject) || !providerObject.length) {\n          return {\n            id: item._id,\n            consumer: consumerObject[0].playerName,\n            provider: \"Blockchain\",\n            typeOfService: typeOfService,\n            amountOfService: amountOfService,\n            price: price,\n            txFee: txFee,\n            type: \"cancel transaction\",\n            createdAt: timeString\n          };\n        }\n\n        return {\n          id: item._id,\n          consumer: consumerObject[0].playerName,\n          provider: providerObject[0].playerName,\n          typeOfService: typeOfService,\n          amountOfService: amountOfService,\n          price: price,\n          txFee: txFee,\n          type: \"cancel transaction\",\n          createdAt: timeString\n        };\n      }));\n      const dataArray = await sortDataArray(transactionsArray);\n      setTableDataArray(dataArray);\n    };\n\n    renderTableData();\n  }, [gameData]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table-all-transactions-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filter-all-transactions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 21\n    }\n  }, \"A\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  }, \"B\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"checkmark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 21\n    }\n  }, \"C\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"checkmark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 21\n    }\n  }, \"Stake\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"checkmark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 21\n    }\n  }, \"Unstake\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"checkmark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table-all-transactions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    onClick: () => {\n      setSortBy('time');\n\n      if (orderOfSort === 'ascending') {\n        setOrderOfSort('descending');\n      }\n\n      if (orderOfSort === 'descending') {\n        setOrderOfSort('ascending');\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 25\n    }\n  }, \"Time \", sortBy === 'time' ? orderOfSort === 'ascending' ? /*#__PURE__*/React.createElement(FaArrowUp, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 84\n    }\n  }) : /*#__PURE__*/React.createElement(FaArrowDown, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 99\n    }\n  }) : \"\"), /*#__PURE__*/React.createElement(\"th\", {\n    onClick: () => {\n      setSortBy('consumer');\n\n      if (orderOfSort === 'ascending') {\n        setOrderOfSort('descending');\n      }\n\n      if (orderOfSort === 'descending') {\n        setOrderOfSort('ascending');\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 25\n    }\n  }, \"Consumer \", sortBy === 'consumer' ? orderOfSort === 'ascending' ? /*#__PURE__*/React.createElement(FaArrowUp, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 92\n    }\n  }) : /*#__PURE__*/React.createElement(FaArrowDown, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 107\n    }\n  }) : \"\"), /*#__PURE__*/React.createElement(\"th\", {\n    onClick: () => {\n      setSortBy('provider');\n\n      if (orderOfSort === 'ascending') {\n        setOrderOfSort('descending');\n      }\n\n      if (orderOfSort === 'descending') {\n        setOrderOfSort('ascending');\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 25\n    }\n  }, \"Provider \", sortBy === 'provider' ? orderOfSort === 'ascending' ? /*#__PURE__*/React.createElement(FaArrowUp, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 92\n    }\n  }) : /*#__PURE__*/React.createElement(FaArrowDown, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 107\n    }\n  }) : \"\"), /*#__PURE__*/React.createElement(\"th\", {\n    onClick: () => {\n      setSortBy('typeOfService');\n\n      if (orderOfSort === 'ascending') {\n        setOrderOfSort('descending');\n      }\n\n      if (orderOfSort === 'descending') {\n        setOrderOfSort('ascending');\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 25\n    }\n  }, \"Type of service \", sortBy === 'typeOfService' ? orderOfSort === 'ascending' ? /*#__PURE__*/React.createElement(FaArrowUp, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 104\n    }\n  }) : /*#__PURE__*/React.createElement(FaArrowDown, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 119\n    }\n  }) : \"\"), /*#__PURE__*/React.createElement(\"th\", {\n    onClick: () => {\n      setSortBy('price');\n\n      if (orderOfSort === 'ascending') {\n        setOrderOfSort('descending');\n      }\n\n      if (orderOfSort === 'descending') {\n        setOrderOfSort('ascending');\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 25\n    }\n  }, \"Price/Amount \", sortBy === 'price' ? orderOfSort === 'ascending' ? /*#__PURE__*/React.createElement(FaArrowUp, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 93\n    }\n  }) : /*#__PURE__*/React.createElement(FaArrowDown, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 108\n    }\n  }) : \"\"), /*#__PURE__*/React.createElement(\"th\", {\n    onClick: () => {\n      setSortBy('txFee');\n\n      if (orderOfSort === 'ascending') {\n        setOrderOfSort('descending');\n      }\n\n      if (orderOfSort === 'descending') {\n        setOrderOfSort('ascending');\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 25\n    }\n  }, \"Tx Fee \", sortBy === 'txFee' ? orderOfSort === 'ascending' ? /*#__PURE__*/React.createElement(FaArrowUp, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 87\n    }\n  }) : /*#__PURE__*/React.createElement(FaArrowDown, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 102\n    }\n  }) : \"\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 21\n    }\n  }, tableDataArray.map(item => /*#__PURE__*/React.createElement(\"tr\", {\n    key: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 37\n    }\n  }, item.createdAt), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 37\n    }\n  }, item.consumer), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 37\n    }\n  }, item.provider), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 37\n    }\n  }, item.typeOfService), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 37\n    }\n  }, item.price), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 37\n    }\n  }, item.txFee)))))));\n};\n\nexport default AllTransactionsTable;","map":{"version":3,"sources":["/home/nejc/LDSE/SharedManufacturing/client/src/components/misc/AllTransactionsTable.js"],"names":["React","useState","useEffect","useGlobalContext","FaArrowUp","FaArrowDown","AllTransactionsTable","gameData","tableDataArray","setTableDataArray","sortBy","setSortBy","orderOfSort","setOrderOfSort","checkBoxes","setCheckBoxes","displayTime","time","createdMillis","Date","toLocaleTimeString","sortDataArray","dataArray","sort","a","b","arrayA","createdAt","split","timeA","parseInt","arrayB","timeB","textA","consumer","toUpperCase","textB","provider","typeOfService","parseFloat","price","txFee","renderTableData","transactionsArray","Promise","all","allTransactions","map","item","amountOfService","consumerObject","players","filter","player","_id","providerObject","timeString","Array","isArray","length","id","playerName","type"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { useGlobalContext} from \"../../context/context\";\nimport { FaArrowUp, FaArrowDown } from 'react-icons/fa';\n\nconst AllTransactionsTable = () => {\n    const { gameData,  } = useGlobalContext();\n    const [tableDataArray, setTableDataArray] = useState([]);\n    const [sortBy, setSortBy] = useState('time');\n    const [orderOfSort, setOrderOfSort] = useState('ascending');\n    const [checkBoxes, setCheckBoxes] = useState([]);\n\n    const displayTime = async (time) => {\n        const createdMillis = await new Date(time);\n        return createdMillis.toLocaleTimeString('it-IT');\n    };\n\n    const sortDataArray = async (dataArray) => {\n        if (sortBy === 'time') {\n            return await dataArray.sort((a, b) => {\n                let arrayA = a.createdAt.split(\":\");\n                let timeA = (parseInt(arrayA[0], 10) * 60 * 60) + (parseInt(arrayA[1], 10) * 60) + parseInt(arrayA[2], 10);\n                let arrayB = b.createdAt.split(\":\");\n                let timeB = (parseInt(arrayB[0], 10) * 60 * 60) + (parseInt(arrayB[1], 10) * 60) + parseInt(arrayB[2], 10);\n                if (orderOfSort === \"descending\") {\n                    return timeB - timeA;\n                } if (orderOfSort === \"ascending\") {\n                    return timeA - timeB;\n                }\n            });\n        } if (sortBy === 'consumer') {\n            return await dataArray.sort((a, b) => {\n                let textA = a.consumer.toUpperCase();\n                let textB = b.consumer.toUpperCase();\n                if (orderOfSort === \"descending\") {\n                    return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;\n                } if (orderOfSort === \"ascending\") {\n                    return (textA > textB) ? -1 : (textA < textB) ? 1 : 0;\n                }\n            });\n        } if (sortBy === 'provider') {\n            return await dataArray.sort((a, b) => {\n                let textA = a.provider.toUpperCase();\n                let textB = b.provider.toUpperCase();\n                if (orderOfSort === \"descending\") {\n                    return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;\n                } if (orderOfSort === \"ascending\") {\n                    return (textA > textB) ? -1 : (textA < textB) ? 1 : 0;\n                }\n            });\n        } if (sortBy === 'typeOfService') {\n            return await dataArray.sort((a, b) => {\n                let textA = a.typeOfService.toUpperCase();\n                let textB = b.typeOfService.toUpperCase();\n                if (orderOfSort === \"descending\") {\n                    return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;\n                } if (orderOfSort === \"ascending\") {\n                    return (textA > textB) ? -1 : (textA < textB) ? 1 : 0;\n                }\n            });\n        } if (sortBy === 'price') {\n            if (orderOfSort === \"descending\") {\n                return await dataArray.sort((a, b) => parseFloat(b.price) - parseFloat(a.price));\n            } if (orderOfSort === \"ascending\") {\n                return await dataArray.sort((a, b) => parseFloat(a.price) - parseFloat(b.price));\n            }\n        } if (sortBy === 'txFee') {\n            if (orderOfSort === \"descending\") {\n                return await dataArray.sort((a, b) => parseFloat(b.txFee) - parseFloat(a.txFee));\n            } if (orderOfSort === \"ascending\") {\n                return await dataArray.sort((a, b) => parseFloat(a.txFee) - parseFloat(b.txFee));\n            }\n        }\n    };\n\n    useEffect(() => {\n        const renderTableData = async () => {\n            const transactionsArray = await Promise.all(gameData.allTransactions.map(async (item) => {\n                let { consumer, provider, typeOfService, amountOfService, price, txFee, createdAt } = item;\n                const consumerObject = await gameData.players.filter(player => player._id === consumer);\n                const providerObject = await gameData.players.filter(player => player._id === provider);\n                const timeString = await displayTime(createdAt);\n                if (!Array.isArray(providerObject) || !providerObject.length) {\n                    return (\n                        {\n                            id: item._id,\n                            consumer: consumerObject[0].playerName,\n                            provider: \"Blockchain\",\n                            typeOfService: typeOfService,\n                            amountOfService: amountOfService,\n                            price: price,\n                            txFee: txFee,\n                            type: \"cancel transaction\",\n                            createdAt: timeString\n                        }\n                    )\n                }\n                return (\n                    {\n                        id: item._id,\n                        consumer: consumerObject[0].playerName,\n                        provider: providerObject[0].playerName,\n                        typeOfService: typeOfService,\n                        amountOfService: amountOfService,\n                        price: price,\n                        txFee: txFee,\n                        type: \"cancel transaction\",\n                        createdAt: timeString\n                    }\n                )\n            }));\n            const dataArray = await sortDataArray(transactionsArray);\n            setTableDataArray(dataArray);\n        };\n        renderTableData();\n    }, [gameData]);\n\n\n    return (\n        <>\n            <div className=\"table-all-transactions-container\">\n                <div className=\"filter-all-transactions\">\n                    <label className=\"container\">A\n                        <input type=\"checkbox\"/>\n                    </label>\n                    <label className=\"container\">B\n                        <input type=\"checkbox\"/>\n                        <span className=\"checkmark\"></span>\n                    </label>\n                    <label className=\"container\">C\n                        <input type=\"checkbox\"/>\n                        <span className=\"checkmark\"></span>\n                    </label>\n                    <label className=\"container\">Stake\n                        <input type=\"checkbox\"/>\n                        <span className=\"checkmark\"></span>\n                    </label>\n                    <label className=\"container\">Unstake\n                        <input type=\"checkbox\"/>\n                        <span className=\"checkmark\"></span>\n                    </label>\n                </div>\n                <table className=\"table-all-transactions\">\n                    <thead>\n                    <tr>\n                        <th onClick={() => {\n                            setSortBy('time');\n                            if (orderOfSort === 'ascending') {\n                                setOrderOfSort('descending');\n                            } if (orderOfSort === 'descending') {\n                                setOrderOfSort('ascending');\n                            }\n                        }}>Time {sortBy === 'time' ? orderOfSort === 'ascending' ? <FaArrowUp/> : <FaArrowDown/> : \"\"}</th>\n                        <th onClick={() => {\n                            setSortBy('consumer');\n                            if (orderOfSort === 'ascending') {\n                                setOrderOfSort('descending');\n                            } if (orderOfSort === 'descending') {\n                                setOrderOfSort('ascending');\n                            }\n                        }}>Consumer {sortBy === 'consumer' ? orderOfSort === 'ascending' ? <FaArrowUp/> : <FaArrowDown/> : \"\"}</th>\n                        <th onClick={() => {\n                            setSortBy('provider');\n                            if (orderOfSort === 'ascending') {\n                                setOrderOfSort('descending');\n                            } if (orderOfSort === 'descending') {\n                                setOrderOfSort('ascending');\n                            }\n                        }}>Provider {sortBy === 'provider' ? orderOfSort === 'ascending' ? <FaArrowUp/> : <FaArrowDown/> : \"\"}</th>\n                        <th onClick={() => {\n                            setSortBy('typeOfService');\n                            if (orderOfSort === 'ascending') {\n                                setOrderOfSort('descending');\n                            } if (orderOfSort === 'descending') {\n                                setOrderOfSort('ascending');\n                            }\n                        }}>Type of service {sortBy === 'typeOfService' ? orderOfSort === 'ascending' ? <FaArrowUp/> : <FaArrowDown/> : \"\"}</th>\n                        <th onClick={() => {\n                            setSortBy('price');\n                            if (orderOfSort === 'ascending') {\n                                setOrderOfSort('descending');\n                            } if (orderOfSort === 'descending') {\n                                setOrderOfSort('ascending');\n                            }\n                        }}>Price/Amount {sortBy === 'price' ? orderOfSort === 'ascending' ? <FaArrowUp/> : <FaArrowDown/> : \"\"}</th>\n                        <th onClick={() => {\n                            setSortBy('txFee');\n                            if (orderOfSort === 'ascending') {\n                                setOrderOfSort('descending');\n                            } if (orderOfSort === 'descending') {\n                                setOrderOfSort('ascending');\n                            }\n                        }}>Tx Fee {sortBy === 'txFee' ? orderOfSort === 'ascending' ? <FaArrowUp/> : <FaArrowDown/> : \"\"}</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {\n                        tableDataArray.map((item) =>\n                            (\n                                <tr key={item.id}>\n                                    <td>{item.createdAt}</td>\n                                    <td>{item.consumer}</td>\n                                    <td>{item.provider}</td>\n                                    <td>{item.typeOfService}</td>\n                                    <td>{item.price}</td>\n                                    <td>{item.txFee}</td>\n                                </tr>\n                            )\n                        )\n                    }\n                    </tbody>\n                </table>\n            </div>\n        </>\n    )\n};\n\nexport default AllTransactionsTable"]},"metadata":{},"sourceType":"module"}