{"ast":null,"code":"var _jsxFileName = \"/home/nejc/LDSE/SharedManufacturing/client/src/components/misc/Trades.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useGlobalContext } from \"../../context/context\";\nimport BarChart from '../misc/BarChart';\n\nconst Trade = () => {\n  const {\n    gameData\n  } = useGlobalContext();\n  const [dataArray1, setDataArray1] = useState([]);\n  const [dataArray2, setDataArray2] = useState([]);\n  const [dataArray3, setDataArray3] = useState([]);\n\n  const getColor = bar => {\n    if (bar.playerName.match(/[a-zA-Z]+/g)[0] === gameData.player.playerName) {\n      return 'red';\n    } else {\n      return 'orange';\n    }\n  };\n\n  const sortArray = async array => {\n    let namesArray = [];\n\n    for (const item of array) {\n      if (!(await namesArray.includes(item.playerName))) {\n        await namesArray.push(item.playerName);\n      }\n    }\n\n    let finalArray = await Promise.all(namesArray.map(async item => {\n      let index = 0;\n      let orders = await array.filter(order => order.playerName === item);\n      orders = await orders.map(order => {\n        index = index + 1;\n        order.playerName = order.playerName + index.toString();\n        return order;\n      });\n      return orders;\n    }));\n    return finalArray.flat();\n  };\n\n  useEffect(() => {\n    const sortDataArrays = async () => {\n      let array1 = await gameData.orders.filter(item => item.typeOfService === gameData.player.typeOfOtherService1);\n      let array2 = await gameData.orders.filter(item => item.typeOfService === gameData.player.typeOfOtherService2);\n      let array3 = await gameData.orders.filter(item => item.typeOfService === gameData.player.typeOfService);\n      await array1.forEach(item => {\n        item.price = parseInt(item.price);\n      });\n      await array2.forEach(item => {\n        item.price = parseInt(item.price);\n      });\n      await array3.forEach(item => {\n        item.price = parseInt(item.price);\n      });\n      let finalArray1 = await sortArray(array1);\n      let finalArray2 = await sortArray(array2);\n      let finalArray3 = await sortArray(array3);\n      await finalArray1.sort((a, b) => parseInt(a.price) - parseInt(b.price));\n      await finalArray2.sort((a, b) => parseInt(a.price) - parseInt(b.price));\n      await finalArray3.sort((a, b) => parseInt(a.price) - parseInt(b.price));\n      setDataArray1(finalArray1);\n      setDataArray2(finalArray2);\n      setDataArray3(finalArray3);\n    };\n\n    sortDataArrays();\n  }, [gameData]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"trades-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"other-services-trade-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chart-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chart-container-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 29\n    }\n  }, \"Service \", `${gameData.player.typeOfOtherService1}`)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chart-container-chart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(BarChart, {\n    data: dataArray1,\n    scheme: 'category10',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chart-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chart-container-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 29\n    }\n  }, \"Service \", `${gameData.player.typeOfOtherService2}`)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chart-container-chart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(BarChart, {\n    data: dataArray2,\n    scheme: 'dark2',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"my-service-trade-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chart-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chart-container-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 29\n    }\n  }, \"Service \", `${gameData.player.typeOfService}`)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chart-container-chart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(BarChart, {\n    data: dataArray3,\n    colors: getColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 29\n    }\n  }))))));\n};\n\nexport default Trade;","map":{"version":3,"sources":["/home/nejc/LDSE/SharedManufacturing/client/src/components/misc/Trades.js"],"names":["React","useState","useEffect","useGlobalContext","BarChart","Trade","gameData","dataArray1","setDataArray1","dataArray2","setDataArray2","dataArray3","setDataArray3","getColor","bar","playerName","match","player","sortArray","array","namesArray","item","includes","push","finalArray","Promise","all","map","index","orders","filter","order","toString","flat","sortDataArrays","array1","typeOfService","typeOfOtherService1","array2","typeOfOtherService2","array3","forEach","price","parseInt","finalArray1","finalArray2","finalArray3","sort","a","b"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport { useGlobalContext} from \"../../context/context\";\nimport BarChart from '../misc/BarChart';\n\n\nconst Trade = () => {\n    const { gameData } = useGlobalContext();\n    const [dataArray1, setDataArray1] = useState([]);\n    const [dataArray2, setDataArray2] = useState([]);\n    const [dataArray3, setDataArray3] = useState([]);\n\n    const getColor = (bar) => {\n        if (bar.playerName.match(/[a-zA-Z]+/g)[0] === gameData.player.playerName) {\n            return 'red';\n        } else {\n            return 'orange';\n        }\n    };\n\n    const sortArray = async (array) => {\n        let namesArray = [];\n        for (const item of array) {\n            if (! await namesArray.includes(item.playerName)) {\n                await namesArray.push(item.playerName);\n            }\n        }\n        let finalArray = await Promise.all(namesArray.map( async (item) => {\n            let index = 0;\n            let orders = await array.filter(order => order.playerName === item);\n            orders = await orders.map((order) => {\n                index = index +1;\n                order.playerName = order.playerName+(index).toString();\n                return order;\n            });\n            return orders;\n        }));\n        return finalArray.flat();\n    };\n\n    useEffect(() => {\n        const sortDataArrays = async () => {\n            let array1 = await gameData.orders.filter(item => item.typeOfService === gameData.player.typeOfOtherService1);\n            let array2 = await gameData.orders.filter(item => item.typeOfService === gameData.player.typeOfOtherService2);\n            let array3 = await gameData.orders.filter(item => item.typeOfService === gameData.player.typeOfService);\n            await array1.forEach((item) => {\n                item.price = parseInt(item.price);\n            });\n            await array2.forEach((item) => {\n                item.price = parseInt(item.price);\n            });\n            await array3.forEach((item) => {\n                item.price = parseInt(item.price);\n            });\n            let finalArray1 = await sortArray(array1);\n            let finalArray2 = await sortArray(array2);\n            let finalArray3 = await sortArray(array3);\n            await finalArray1.sort((a, b) => parseInt(a.price) - parseInt(b.price));\n            await finalArray2.sort((a, b) => parseInt(a.price) - parseInt(b.price));\n            await finalArray3.sort((a, b) => parseInt(a.price) - parseInt(b.price));\n            setDataArray1(finalArray1);\n            setDataArray2(finalArray2);\n            setDataArray3(finalArray3);\n        };\n        sortDataArrays();\n    }, [gameData]);\n\n    return (\n        <>\n            <div className=\"trades-container\">\n                <div className=\"other-services-trade-container\">\n                    <div className=\"chart-container\">\n                        <div className=\"chart-container-text\">\n                            <h3>Service {`${gameData.player.typeOfOtherService1}`}</h3>\n                        </div>\n                        <div className=\"chart-container-chart\">\n                            <BarChart data={dataArray1} scheme={'category10'}/>\n                        </div>\n                    </div>\n                    <div className=\"chart-container\">\n                        <div className=\"chart-container-text\">\n                            <h3>Service {`${gameData.player.typeOfOtherService2}`}</h3>\n                        </div>\n                        <div className=\"chart-container-chart\">\n                            <BarChart data={dataArray2} scheme={'dark2'}/>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"my-service-trade-container\">\n                    <div className=\"chart-container\">\n                        <div className=\"chart-container-text\">\n                            <h3>Service {`${gameData.player.typeOfService}`}</h3>\n                        </div>\n                        <div className=\"chart-container-chart\">\n                            <BarChart data={dataArray3} colors={getColor}/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n};\n\nexport default Trade"]},"metadata":{},"sourceType":"module"}