{"ast":null,"code":"var _jsxFileName = \"/home/nejc/LDSE/SharedManufacturing/client/src/context/context.js\";\nimport React, { useState, useContext } from 'react';\nconst AppContext = React.createContext();\n\nconst AppProvider = ({\n  children\n}) => {\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [playerData, setPlayerData] = useState({\n    token: undefined,\n    player: undefined\n  });\n  const [modalContent, setModalContent] = useState('');\n\n  const clearPlayerData = () => {\n    setPlayerData({\n      token: undefined,\n      player: undefined\n    });\n  };\n\n  const openSidebar = () => {\n    setIsSidebarOpen(true);\n  };\n\n  const closeSidebar = () => {\n    setIsSidebarOpen(false);\n  };\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  return /*#__PURE__*/React.createElement(AppContext.Provider, {\n    value: {\n      isModalOpen,\n      isSidebarOpen,\n      openModal,\n      openSidebar,\n      closeSidebar,\n      playerData,\n      setPlayerData,\n      clearPlayerData,\n      modalContent,\n      setModalContent\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, children);\n};\n\nexport const useGlobalContext = () => {\n  return useContext(AppContext);\n};\nexport { AppContext, AppProvider };","map":{"version":3,"sources":["/home/nejc/LDSE/SharedManufacturing/client/src/context/context.js"],"names":["React","useState","useContext","AppContext","createContext","AppProvider","children","isSidebarOpen","setIsSidebarOpen","isModalOpen","setIsModalOpen","playerData","setPlayerData","token","undefined","player","modalContent","setModalContent","clearPlayerData","openSidebar","closeSidebar","openModal","useGlobalContext"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AAEA,MAAMC,UAAU,GAAGH,KAAK,CAACI,aAAN,EAAnB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAChC,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCP,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,KAAD,CAA9C;AAEA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC;AACzCY,IAAAA,KAAK,EAAEC,SADkC;AAEzCC,IAAAA,MAAM,EAAED;AAFiC,GAAD,CAA5C;AAKA,QAAM,CAACE,YAAD,EAAeC,eAAf,IAAkChB,QAAQ,CAAC,EAAD,CAAhD;;AAEA,QAAMiB,eAAe,GAAG,MAAM;AAC1BN,IAAAA,aAAa,CAAC;AACVC,MAAAA,KAAK,EAAEC,SADG;AAEVC,MAAAA,MAAM,EAAED;AAFE,KAAD,CAAb;AAIH,GALD;;AAOA,QAAMK,WAAW,GAAG,MAAM;AACtBX,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACH,GAFD;;AAGA,QAAMY,YAAY,GAAG,MAAM;AACvBZ,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACH,GAFD;;AAGA,QAAMa,SAAS,GAAG,MAAM;AACpBX,IAAAA,cAAc,CAAC,IAAD,CAAd;AACH,GAFD;;AAMA,sBACI,oBAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAE;AACxBD,MAAAA,WADwB;AAExBF,MAAAA,aAFwB;AAGxBc,MAAAA,SAHwB;AAIxBF,MAAAA,WAJwB;AAKxBC,MAAAA,YALwB;AAMxBT,MAAAA,UANwB;AAOxBC,MAAAA,aAPwB;AAQxBM,MAAAA,eARwB;AASxBF,MAAAA,YATwB;AAUxBC,MAAAA;AAVwB,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAYKX,QAZL,CADJ;AAgBH,CA9CD;;AAkDA,OAAO,MAAMgB,gBAAgB,GAAG,MAAM;AAClC,SAAOpB,UAAU,CAACC,UAAD,CAAjB;AACH,CAFM;AAIP,SAAQA,UAAR,EAAoBE,WAApB","sourcesContent":["import React, { useState, useContext } from 'react'\n\nconst AppContext = React.createContext();\n\nconst AppProvider = ({children}) => {\n    const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n    const [isModalOpen, setIsModalOpen] = useState(false);\n\n    const [playerData, setPlayerData] = useState({\n        token: undefined,\n        player: undefined\n    });\n\n    const [modalContent, setModalContent] = useState('');\n\n    const clearPlayerData = () => {\n        setPlayerData({\n            token: undefined,\n            player: undefined\n        });\n    };\n\n    const openSidebar = () => {\n        setIsSidebarOpen(true);\n    };\n    const closeSidebar = () => {\n        setIsSidebarOpen(false);\n    };\n    const openModal = () => {\n        setIsModalOpen(true);\n    };\n\n\n\n    return (\n        <AppContext.Provider value={{\n            isModalOpen,\n            isSidebarOpen,\n            openModal,\n            openSidebar,\n            closeSidebar,\n            playerData,\n            setPlayerData,\n            clearPlayerData,\n            modalContent,\n            setModalContent\n        }}>\n            {children}\n        </AppContext.Provider>\n    )\n};\n\n\n\nexport const useGlobalContext = () => {\n    return useContext(AppContext)\n};\n\nexport {AppContext, AppProvider}"]},"metadata":{},"sourceType":"module"}