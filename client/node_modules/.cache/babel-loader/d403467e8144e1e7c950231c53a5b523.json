{"ast":null,"code":"var _jsxFileName = \"/home/nejc/LDSE/SharedManufacturing/client/src/components/misc/Blockchain.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useGlobalContext } from \"../../context/context\";\nimport PieChart from '../misc/PieChart';\n\nconst Trades = () => {\n  const {\n    gameData\n  } = useGlobalContext();\n  const [chartDataArray, setChartDataArray] = useState([]);\n  useEffect(() => {\n    const createDataArray = async () => {\n      const dataArray = await gameData.players.map(item => {\n        item.id = item.playerName;\n        item.value = parseInt(item.stake);\n      });\n      setChartDataArray(dataArray);\n    };\n\n    createDataArray();\n  }, [gameData]);\n  useEffect(() => {}, [gameData]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"blockchain-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"piechart-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"piechart-container-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 25\n    }\n  }, \"Blockchain - stake\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"piechart-container-chart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(PieChart, {\n    data: chartDataArray,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 25\n    }\n  })))));\n};\n\nexport default Trades;","map":{"version":3,"sources":["/home/nejc/LDSE/SharedManufacturing/client/src/components/misc/Blockchain.js"],"names":["React","useState","useEffect","useGlobalContext","PieChart","Trades","gameData","chartDataArray","setChartDataArray","createDataArray","dataArray","players","map","item","id","playerName","value","parseInt","stake"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,gBAAT,QAAgC,uBAAhC;AACA,OAAOC,QAAP,MAAqB,kBAArB;;AAGA,MAAMC,MAAM,GAAG,MAAM;AACjB,QAAM;AAAEC,IAAAA;AAAF,MAAeH,gBAAgB,EAArC;AACA,QAAM,CAACI,cAAD,EAAiBC,iBAAjB,IAAsCP,QAAQ,CAAC,EAAD,CAApD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMO,eAAe,GAAG,YAAY;AAChC,YAAMC,SAAS,GAAG,MAAMJ,QAAQ,CAACK,OAAT,CAAiBC,GAAjB,CAAsBC,IAAD,IAAU;AACnDA,QAAAA,IAAI,CAACC,EAAL,GAAUD,IAAI,CAACE,UAAf;AACAF,QAAAA,IAAI,CAACG,KAAL,GAAaC,QAAQ,CAACJ,IAAI,CAACK,KAAN,CAArB;AACH,OAHuB,CAAxB;AAIAV,MAAAA,iBAAiB,CAACE,SAAD,CAAjB;AACH,KAND;;AAOAD,IAAAA,eAAe;AAClB,GATQ,EASN,CAACH,QAAD,CATM,CAAT;AAWAJ,EAAAA,SAAS,CAAC,MAAM,CAEf,CAFQ,EAEN,CAACI,QAAD,CAFM,CAAT;AAIA,sBACI,uDACI;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,CADJ,eAII;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAJJ,CADJ,CADJ,CADJ;AAcH,CAjCD;;AAmCA,eAAeF,MAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport { useGlobalContext} from \"../../context/context\";\nimport PieChart from '../misc/PieChart';\n\n\nconst Trades = () => {\n    const { gameData } = useGlobalContext();\n    const [chartDataArray, setChartDataArray] = useState([]);\n\n    useEffect(() => {\n        const createDataArray = async () => {\n            const dataArray = await gameData.players.map((item) => {\n                item.id = item.playerName;\n                item.value = parseInt(item.stake);\n            });\n            setChartDataArray(dataArray);\n        };\n        createDataArray();\n    }, [gameData]);\n\n    useEffect(() => {\n\n    }, [gameData]);\n\n    return (\n        <>\n            <div className=\"blockchain-container\">\n                <div className=\"piechart-container\">\n                    <div className=\"piechart-container-text\">\n                        <h3>Blockchain - stake</h3>\n                    </div>\n                    <div className=\"piechart-container-chart\">\n                        <PieChart data={chartDataArray}/>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n};\n\nexport default Trades"]},"metadata":{},"sourceType":"module"}