{"ast":null,"code":"var _jsxFileName = \"/home/nejc/LDSE/SharedManufacturing/client/src/components/misc/SetPriceModal.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useGlobalContext } from \"../../context/context\";\nimport { FaTimes } from 'react-icons/fa';\nimport Axios from \"axios/index\";\n\nconst SetPriceModal = () => {\n  const {\n    gameData,\n    closeSetPriceModal,\n    isSetPriceModalOpen\n  } = useGlobalContext();\n  const [price, setPrice] = useState();\n  const [allSelected, setAllSelected] = useState(false);\n  const [checkBoxes, setCheckBoxes] = useState([]);\n\n  const selectAll = async () => {\n    await setAllSelected(!allSelected);\n    const newArray = await checkBoxes.map(item => ({ ...item,\n      isChecked: !allSelected\n    }));\n    await setCheckBoxes(newArray);\n  };\n\n  const selectOne = async e => {\n    let itemName = e.target.name;\n    let checked = e.target.checked;\n    const newArray = await checkBoxes.map(item => item.name === itemName ? { ...item,\n      isChecked: checked\n    } : item);\n    setCheckBoxes(newArray);\n    const allChecked = await newArray.every(item => item.isChecked);\n    setAllSelected(allChecked);\n  };\n\n  const confirm = async () => {\n    try {} catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    const getPlayersData = async () => {\n      const playersData = await gameData.players.map((item, index) => {\n        return {\n          id: item._id,\n          name: \"item\" + (index + 1).toString(),\n          playerName: item.playerName\n        };\n      });\n      const priceData = await Promise.all(playersData.map(async player => {\n        const playerPriceData = await Object.keys(gameData.player.price).forEach(function (key) {\n          if (key === player.id) {\n            return key;\n          }\n        });\n\n        if (playerPriceData === undefined) {\n          return { ...player,\n            price: \"undefined\"\n          };\n        } else {\n          return { ...player,\n            price: playerPriceData.Object.keys(playerPriceData[0])[0]\n          };\n        }\n      }));\n      const newArray = await Promise.all(priceData.map(async data => {\n        const tableData = await checkBoxes.filter(item => item.id === data.id);\n\n        if (!Array.isArray(tableData) || !tableData.length) {\n          return { ...data,\n            isChecked: false\n          };\n        } else {\n          return { ...data,\n            isChecked: tableData.isChecked\n          };\n        }\n      }));\n      await setCheckBoxes(newArray);\n    };\n\n    getPlayersData();\n  }, [gameData]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `${isSetPriceModalOpen ? 'modal-confirm-overlay show-modal-confirm' : 'modal-confirm-overlay'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-confirm-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, \"Set Price\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"set-price-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table-set-price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    className: \"table-set-price-head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 29\n    }\n  }, \"Select\"), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"table-set-price-head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 29\n    }\n  }, \"Player Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"table-set-price-head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 29\n    }\n  }, \"Price\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  }, checkBoxes.map(item => /*#__PURE__*/React.createElement(\"tr\", {\n    key: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    id: item.id,\n    name: item.name,\n    checked: item.isChecked,\n    onChange: selectOne,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 37\n    }\n  }, item.playerName), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 37\n    }\n  }, item.price, \"$\")))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"select-all-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"select-all-btn\",\n    onClick: () => selectAll(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 21\n    }\n  }, allSelected ? 'Unselect All' : 'Select All')), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-input-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"Price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 21\n    }\n  }, \"Price\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-input-group-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"Price\",\n    id: \"inputHolder\",\n    placeholder: \"Enter price\",\n    onChange: e => setPrice(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 25\n    }\n  }, \"$\"))), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"close-modal-btn\",\n    onClick: () => {\n      closeSetPriceModal();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FaTimes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"set-price-buttons-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"confirm-modal-btn\",\n    onClick: confirm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 21\n    }\n  }, \"Set\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"confirm-modal-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 21\n    }\n  }, \"Remove\"))));\n};\n\nexport default SetPriceModal;","map":{"version":3,"sources":["/home/nejc/LDSE/SharedManufacturing/client/src/components/misc/SetPriceModal.js"],"names":["React","useState","useEffect","useGlobalContext","FaTimes","Axios","SetPriceModal","gameData","closeSetPriceModal","isSetPriceModalOpen","price","setPrice","allSelected","setAllSelected","checkBoxes","setCheckBoxes","selectAll","newArray","map","item","isChecked","selectOne","e","itemName","target","name","checked","allChecked","every","confirm","err","console","log","getPlayersData","playersData","players","index","id","_id","toString","playerName","priceData","Promise","all","player","playerPriceData","Object","keys","forEach","key","undefined","data","tableData","filter","Array","isArray","length","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useGlobalContext} from \"../../context/context\";\nimport { FaTimes } from 'react-icons/fa';\nimport Axios from \"axios/index\";\n\nconst SetPriceModal = () => {\n    const { gameData, closeSetPriceModal, isSetPriceModalOpen } = useGlobalContext();\n    const [price, setPrice] = useState();\n    const [allSelected, setAllSelected] = useState(false);\n    const [checkBoxes, setCheckBoxes] = useState([]);\n\n    const selectAll = async () => {\n        await setAllSelected(!allSelected);\n        const newArray = await checkBoxes.map(item => ({ ...item, isChecked: !allSelected }));\n        await setCheckBoxes(newArray);\n    };\n\n    const selectOne = async (e) => {\n        let itemName = e.target.name;\n        let checked = e.target.checked;\n        const newArray = await checkBoxes.map(item =>\n            item.name === itemName ? { ...item, isChecked: checked } : item\n        );\n        setCheckBoxes(newArray);\n        const allChecked = await newArray.every(item => item.isChecked);\n        setAllSelected(allChecked);\n    };\n\n    const confirm = async () => {\n        try {\n\n        } catch(err) {\n            console.log(err);\n        }\n    };\n\n    useEffect(() => {\n        const getPlayersData = async () => {\n            const playersData = await gameData.players.map((item, index) => {\n                return {\n                    id: item._id,\n                    name: \"item\" + (index+1).toString(),\n                    playerName: item.playerName\n                }\n            });\n            const priceData = await Promise.all(playersData.map(async (player) => {\n                const playerPriceData = await Object.keys(gameData.player.price).forEach(function(key) {\n                    if (key === player.id) {\n                        return key;\n                    }\n                });\n                if (playerPriceData === undefined) {\n                    return {\n                        ...player,\n                        price: \"undefined\"\n                    }\n                } else {\n                    return {\n                        ...player,\n                        price: playerPriceData.Object.keys(playerPriceData[0])[0]\n                    }\n                }\n            }));\n            const newArray = await Promise.all(priceData.map(async (data) => {\n                const tableData = await checkBoxes.filter(item => item.id === data.id);\n                if (!Array.isArray(tableData) || !tableData.length) {\n                    return {\n                        ...data,\n                        isChecked: false\n                    }\n                } else {\n                    return {\n                        ...data,\n                        isChecked: tableData.isChecked\n                    }\n                }\n            }));\n            await setCheckBoxes(newArray);\n        };\n        getPlayersData();\n    }, [gameData]);\n\n\n    return (\n        <div\n            className={`${\n                isSetPriceModalOpen ? 'modal-confirm-overlay show-modal-confirm' : 'modal-confirm-overlay'\n                }`}\n        >\n            <div className='modal-confirm-container'>\n                <h3>Set Price</h3>\n                <div className=\"set-price-container\">\n                    <table className=\"table-set-price\">\n                        <thead>\n                        <tr>\n                            <th className=\"table-set-price-head\">Select</th>\n                            <th className=\"table-set-price-head\">Player Name</th>\n                            <th className=\"table-set-price-head\">Price</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {\n                            checkBoxes.map((item) => (\n                                <tr key={item.id}>\n                                    <td><input type=\"checkbox\" id={item.id} name={item.name} checked={item.isChecked} onChange={selectOne}/></td>\n                                    <td>{item.playerName}</td>\n                                    <td>{item.price}$</td>\n                                </tr>\n                            ))\n                        }\n                        </tbody>\n                    </table>\n                </div>\n                <div className=\"select-all-container\">\n                    <button className='select-all-btn' onClick={() => selectAll()}>{allSelected ? 'Unselect All' : 'Select All'}</button>\n                </div>\n                <div className={\"modal-input-group\"}>\n                    <label htmlFor={\"Price\"}>Price</label>\n                    <div className=\"modal-input-group-container\">\n                        <input type={\"text\"} name={\"Price\"} id={\"inputHolder\"} placeholder={\"Enter price\"} onChange={e => setPrice(e.target.value)}/>\n                        <span>$</span>\n                    </div>\n                </div>\n\n                <button className='close-modal-btn' onClick={() => {\n                    closeSetPriceModal();\n                }}>\n                    <FaTimes></FaTimes>\n                </button>\n                <div className=\"set-price-buttons-container\">\n                    <button className='confirm-modal-btn' onClick={confirm}>Set</button>\n                    <button className='confirm-modal-btn'>Remove</button>\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport default SetPriceModal"]},"metadata":{},"sourceType":"module"}