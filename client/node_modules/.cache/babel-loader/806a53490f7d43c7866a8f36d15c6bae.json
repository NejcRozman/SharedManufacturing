{"ast":null,"code":"var _jsxFileName = \"/home/nejc/LDSE/SharedManufacturing/client/src/components/misc/TradeModal.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useGlobalContext } from \"../../context/context\";\nimport { FaTimes } from 'react-icons/fa';\nimport Axios from \"axios/index\";\n\nconst TradeModal = () => {\n  const {\n    gameData,\n    isTradeModalOpen,\n    closeTradeModal,\n    tradeModalContent\n  } = useGlobalContext();\n  const [txFee, setTxFee] = useState();\n  const [showAlert, setShowAlert] = useState(false);\n  const [alertContent, setAlertContent] = useState('');\n\n  const countDecimals = value => {\n    if (Math.floor(value).toString() === value) return 0;\n    return value.toString().split(\".\")[1].length || 0;\n  };\n\n  const confirm = async () => {\n    try {\n      if (txFee === undefined || txFee === \"\") {\n        setAlertContent('You must enter a value');\n        setShowAlert(true);\n      } else {\n        if (isNaN(txFee) || txFee < 0) {\n          setAlertContent('Input must be a positive number');\n          setShowAlert(true);\n        } else {\n          if (countDecimals(txFee) > 1) {\n            setAlertContent('Input value can have at most one decimal place');\n            setShowAlert(true);\n          } else {\n            if (parseFloat(tradeModalContent.price) + parseFloat(txFee) > gameData.player.balance) {\n              setAlertContent('Price and TxFee is higher than balance');\n              setShowAlert(true);\n            } else {\n              const token = localStorage.getItem(\"auth-token\");\n              const playerId = localStorage.getItem(\"playerId\");\n              const data = {\n                provider: tradeModalContent._id,\n                typeOfService: tradeModalContent.typeOfService,\n                amountOfService: 1,\n                price: tradeModalContent.price,\n                txFee: txFee\n              };\n              const options = {\n                headers: {\n                  Authorization: \"Bearer \" + token\n                }\n              };\n              const createRes = await Axios.post(`http://localhost:8000/player/createTrade/${playerId}`, data, options);\n              closeTradeModal();\n              setAlertContent('');\n              setShowAlert(false);\n            }\n          }\n        }\n      }\n    } catch (err) {\n      if (err.response !== undefined && err.response.data.message === \"Trade already exists\") {\n        setAlertContent('Trade with this person already exists');\n        setShowAlert(true);\n      }\n    }\n  };\n\n  useEffect(() => {}, [gameData]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `${isTradeModalOpen ? 'modal-confirm-overlay show-modal-confirm' : 'modal-confirm-overlay'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-confirm-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, \"Create Trade\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, \"Provider: \", tradeModalContent.playerName), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }, \"typeOfService: \", tradeModalContent.typeOfService), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, \"price: \", tradeModalContent.price, \"$\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-input-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"txFee\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, \"Tx Fee\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-input-group-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"txFee\",\n    id: \"inputHolder\",\n    placeholder: \"Enter tx fee\",\n    onChange: e => setTxFee(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 25\n    }\n  }, \"$\")), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, \"Current Max Tx Fee: \", tradeModalContent.maxTxFee, \"$\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: `${showAlert ? 'modal-input-alert show-modal-input-alert' : 'modal-input-alert'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, alertContent), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"close-modal-btn\",\n    onClick: () => {\n      closeTradeModal();\n      setAlertContent('');\n      setShowAlert(false);\n      setTxFee();\n      document.getElementById(\"inputHolder\").value = \"\";\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FaTimes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"confirm-modal-btn\",\n    onClick: confirm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, \"Confirm\")));\n};\n\nexport default TradeModal;","map":{"version":3,"sources":["/home/nejc/LDSE/SharedManufacturing/client/src/components/misc/TradeModal.js"],"names":["React","useState","useEffect","useGlobalContext","FaTimes","Axios","TradeModal","gameData","isTradeModalOpen","closeTradeModal","tradeModalContent","txFee","setTxFee","showAlert","setShowAlert","alertContent","setAlertContent","countDecimals","value","Math","floor","toString","split","length","confirm","undefined","isNaN","parseFloat","price","player","balance","token","localStorage","getItem","playerId","data","provider","_id","typeOfService","amountOfService","options","headers","Authorization","createRes","post","err","response","message","playerName","e","target","maxTxFee","document","getElementById"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { useGlobalContext} from \"../../context/context\";\nimport { FaTimes } from 'react-icons/fa';\nimport Axios from \"axios/index\";\n\nconst TradeModal = () => {\n    const { gameData, isTradeModalOpen, closeTradeModal, tradeModalContent } = useGlobalContext();\n    const [txFee, setTxFee] = useState();\n    const [showAlert, setShowAlert] = useState(false);\n    const [alertContent, setAlertContent] = useState('');\n\n    const countDecimals = (value) => {\n        if(Math.floor(value).toString() === value) return 0;\n        return value.toString().split(\".\")[1].length || 0;\n    };\n\n    const confirm = async () => {\n        try {\n            if (txFee === undefined || txFee === \"\") {\n                setAlertContent('You must enter a value');\n                setShowAlert(true);\n            } else {\n                if (isNaN(txFee) || txFee < 0) {\n                    setAlertContent('Input must be a positive number');\n                    setShowAlert(true);\n                } else {\n                    if (countDecimals(txFee) > 1) {\n                        setAlertContent('Input value can have at most one decimal place');\n                        setShowAlert(true);\n                    } else {\n                        if (parseFloat(tradeModalContent.price)+parseFloat(txFee) > gameData.player.balance) {\n                            setAlertContent('Price and TxFee is higher than balance');\n                            setShowAlert(true);\n                        } else {\n                            const token = localStorage.getItem(\"auth-token\");\n                            const playerId = localStorage.getItem(\"playerId\");\n                            const data = {\n                                provider: tradeModalContent._id,\n                                typeOfService: tradeModalContent.typeOfService,\n                                amountOfService: 1,\n                                price: tradeModalContent.price,\n                                txFee: txFee\n                            };\n                            const options = {\n                                headers: {\n                                    Authorization: \"Bearer \" + token\n                                }\n                            };\n                            const createRes =  await Axios.post(`http://localhost:8000/player/createTrade/${playerId}`, data, options);\n                            closeTradeModal();\n                            setAlertContent('');\n                            setShowAlert(false);\n                        }\n                    }\n                }\n            }\n        } catch(err) {\n            if (err.response !== undefined && err.response.data.message === \"Trade already exists\") {\n                setAlertContent('Trade with this person already exists');\n                setShowAlert(true);\n            }\n        }\n    };\n\n    useEffect(() => {\n\n    }, [gameData]);\n\n    return (\n        <div\n            className={\n                `${isTradeModalOpen ? 'modal-confirm-overlay show-modal-confirm' : 'modal-confirm-overlay'}`\n            }\n        >\n            <div className='modal-confirm-container'>\n                <h3>Create Trade</h3>\n                <ul>\n                    <li>Provider: {tradeModalContent.playerName}</li>\n                    <li>typeOfService: {tradeModalContent.typeOfService}</li>\n                    <li>price: {tradeModalContent.price}$</li>\n                </ul>\n                <div className={\"modal-input-group\"}>\n                    <label htmlFor={\"txFee\"}>Tx Fee</label>\n                    <div className=\"modal-input-group-container\">\n                        <input type={\"text\"} name={\"txFee\"} id={\"inputHolder\"} placeholder={\"Enter tx fee\"} onChange={e => setTxFee(e.target.value)}/>\n                        <span>$</span>\n                    </div>\n                    <span>Current Max Tx Fee: {tradeModalContent.maxTxFee}$</span>\n                </div>\n                <div className={`${showAlert? 'modal-input-alert show-modal-input-alert' : 'modal-input-alert'}`}>\n                    {alertContent}\n                </div>\n                <button className='close-modal-btn' onClick={() => {\n                    closeTradeModal();\n                    setAlertContent('');\n                    setShowAlert(false);\n                    setTxFee();\n                    document.getElementById(\"inputHolder\").value= \"\";\n                }}>\n                    <FaTimes></FaTimes>\n                </button>\n                <button className='confirm-modal-btn' onClick={confirm}>Confirm</button>\n            </div>\n        </div>\n    )\n};\n\nexport default TradeModal"]},"metadata":{},"sourceType":"module"}