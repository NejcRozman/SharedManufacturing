{"ast":null,"code":"var _jsxFileName = \"/home/nejc/LDSE/SharedManufacturing/client/src/components/misc/Trades.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useGlobalContext } from \"../../context/context\";\nimport { ResponsiveBar } from '@nivo/bar';\n\nconst Trades = () => {\n  const {\n    gameData\n  } = useGlobalContext();\n  const data = [{\n    \"playerName\": \"Anja\",\n    \"hot dog\": 130,\n    \"hot dogColor\": \"hsl(335, 70%, 50%)\",\n    \"burger\": 43,\n    \"burgerColor\": \"hsl(89, 70%, 50%)\"\n  }, {\n    \"playerName\": \"Nejc\",\n    \"hot dog\": 187,\n    \"hot dogColor\": \"hsl(116, 70%, 50%)\",\n    \"burger\": 34,\n    \"burgerColor\": \"hsl(206, 70%, 50%)\"\n  }, {\n    \"playerName\": \"Marko\",\n    \"hot dog\": 194,\n    \"hot dogColor\": \"hsl(194, 70%, 50%)\",\n    \"burger\": 58,\n    \"burgerColor\": \"hsl(21, 70%, 50%)\"\n  }];\n  useEffect(() => {}, [gameData]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chart-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ResponsiveBar, {\n    data: data,\n    keys: ['hot dog', 'burger'],\n    indexBy: \"playerName\",\n    margin: {\n      top: 50,\n      right: 130,\n      bottom: 50,\n      left: 60\n    },\n    padding: 0.3,\n    valueScale: {\n      type: 'linear'\n    },\n    colors: {\n      scheme: 'nivo'\n    },\n    defs: [{\n      id: 'dots',\n      type: 'patternDots',\n      background: 'inherit',\n      color: '#38bcb2',\n      size: 4,\n      padding: 1,\n      stagger: true\n    }, {\n      id: 'lines',\n      type: 'patternLines',\n      background: 'inherit',\n      color: '#eed312',\n      rotation: -45,\n      lineWidth: 6,\n      spacing: 10\n    }],\n    fill: [{\n      match: {\n        id: 'fries'\n      },\n      id: 'dots'\n    }, {\n      match: {\n        id: 'sandwich'\n      },\n      id: 'lines'\n    }],\n    borderColor: {\n      from: 'color',\n      modifiers: [['darker', 1.6]]\n    },\n    axisTop: null,\n    axisRight: null,\n    axisBottom: {\n      tickSize: 5,\n      tickPadding: 5,\n      tickRotation: 0,\n      legend: 'country',\n      legendPosition: 'middle',\n      legendOffset: 32\n    },\n    axisLeft: {\n      tickSize: 5,\n      tickPadding: 5,\n      tickRotation: 0,\n      legend: 'food',\n      legendPosition: 'middle',\n      legendOffset: -40\n    },\n    labelSkipWidth: 12,\n    labelSkipHeight: 12,\n    labelTextColor: {\n      from: 'color',\n      modifiers: [['darker', 1.6]]\n    },\n    legends: [{\n      dataFrom: 'keys',\n      anchor: 'bottom-right',\n      direction: 'column',\n      justify: false,\n      translateX: 120,\n      translateY: 0,\n      itemsSpacing: 2,\n      itemWidth: 100,\n      itemHeight: 20,\n      itemDirection: 'left-to-right',\n      itemOpacity: 0.85,\n      symbolSize: 20,\n      effects: [{\n        on: 'hover',\n        style: {\n          itemOpacity: 1\n        }\n      }]\n    }],\n    animate: true,\n    motionStiffness: 90,\n    motionDamping: 15,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default Trades;","map":{"version":3,"sources":["/home/nejc/LDSE/SharedManufacturing/client/src/components/misc/Trades.js"],"names":["React","useState","useEffect","useGlobalContext","ResponsiveBar","Trades","gameData","data","top","right","bottom","left","type","scheme","id","background","color","size","padding","stagger","rotation","lineWidth","spacing","match","from","modifiers","tickSize","tickPadding","tickRotation","legend","legendPosition","legendOffset","dataFrom","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemDirection","itemOpacity","symbolSize","effects","on","style"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport { useGlobalContext} from \"../../context/context\";\nimport { ResponsiveBar } from '@nivo/bar';\n\n\nconst Trades = () => {\n    const { gameData } = useGlobalContext();\n\n    const data = [\n        {\n            \"playerName\": \"Anja\",\n            \"hot dog\": 130,\n            \"hot dogColor\": \"hsl(335, 70%, 50%)\",\n            \"burger\": 43,\n            \"burgerColor\": \"hsl(89, 70%, 50%)\"\n        },\n        {\n            \"playerName\": \"Nejc\",\n            \"hot dog\": 187,\n            \"hot dogColor\": \"hsl(116, 70%, 50%)\",\n            \"burger\": 34,\n            \"burgerColor\": \"hsl(206, 70%, 50%)\"\n        },\n        {\n            \"playerName\": \"Marko\",\n            \"hot dog\": 194,\n            \"hot dogColor\": \"hsl(194, 70%, 50%)\",\n            \"burger\": 58,\n            \"burgerColor\": \"hsl(21, 70%, 50%)\"\n        }\n    ];\n\n    useEffect(() => {\n\n    }, [gameData]);\n\n    return (\n        <>\n            <div className=\"chart-container\">\n                <ResponsiveBar\n                    data={data}\n                    keys={[ 'hot dog', 'burger' ]}\n                    indexBy=\"playerName\"\n                    margin={{ top: 50, right: 130, bottom: 50, left: 60 }}\n                    padding={0.3}\n                    valueScale={{ type: 'linear' }}\n                    colors={{ scheme: 'nivo' }}\n                    defs={[\n                        {\n                            id: 'dots',\n                            type: 'patternDots',\n                            background: 'inherit',\n                            color: '#38bcb2',\n                            size: 4,\n                            padding: 1,\n                            stagger: true\n                        },\n                        {\n                            id: 'lines',\n                            type: 'patternLines',\n                            background: 'inherit',\n                            color: '#eed312',\n                            rotation: -45,\n                            lineWidth: 6,\n                            spacing: 10\n                        }\n                    ]}\n                    fill={[\n                        {\n                            match: {\n                                id: 'fries'\n                            },\n                            id: 'dots'\n                        },\n                        {\n                            match: {\n                                id: 'sandwich'\n                            },\n                            id: 'lines'\n                        }\n                    ]}\n                    borderColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\n                    axisTop={null}\n                    axisRight={null}\n                    axisBottom={{\n                        tickSize: 5,\n                        tickPadding: 5,\n                        tickRotation: 0,\n                        legend: 'country',\n                        legendPosition: 'middle',\n                        legendOffset: 32\n                    }}\n                    axisLeft={{\n                        tickSize: 5,\n                        tickPadding: 5,\n                        tickRotation: 0,\n                        legend: 'food',\n                        legendPosition: 'middle',\n                        legendOffset: -40\n                    }}\n                    labelSkipWidth={12}\n                    labelSkipHeight={12}\n                    labelTextColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\n                    legends={[\n                        {\n                            dataFrom: 'keys',\n                            anchor: 'bottom-right',\n                            direction: 'column',\n                            justify: false,\n                            translateX: 120,\n                            translateY: 0,\n                            itemsSpacing: 2,\n                            itemWidth: 100,\n                            itemHeight: 20,\n                            itemDirection: 'left-to-right',\n                            itemOpacity: 0.85,\n                            symbolSize: 20,\n                            effects: [\n                                {\n                                    on: 'hover',\n                                    style: {\n                                        itemOpacity: 1\n                                    }\n                                }\n                            ]\n                        }\n                    ]}\n                    animate={true}\n                    motionStiffness={90}\n                    motionDamping={15}\n                />\n            </div>\n        </>\n    )\n};\n\nexport default Trades"]},"metadata":{},"sourceType":"module"}