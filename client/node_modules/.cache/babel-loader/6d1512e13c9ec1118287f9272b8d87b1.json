{"ast":null,"code":"var _jsxFileName = \"/home/nejc/LDSE/SharedManufacturing/client/src/components/misc/StakeModal.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useGlobalContext } from \"../../context/context\";\nimport { FaTimes, FaPlus, FaMinus } from 'react-icons/fa';\nimport Axios from \"axios/index\";\n\nconst StakeModal = () => {\n  const {\n    gameData,\n    isStakeModalOpen,\n    closeStakeModal\n  } = useGlobalContext();\n  const [relativeStake, setRelativeStake] = useState(0);\n  const [newStake, setNewStake] = useState(0);\n  const [txFee, setTxFee] = useState();\n  const [showAlert, setShowAlert] = useState(false);\n  const [alertContent, setAlertContent] = useState('');\n\n  const increaseNewStake = () => {\n    if (newStake <= gameData.player.balance - 1) {\n      setNewStake(newStake + 1);\n    }\n  };\n\n  const decreaseNewStake = () => {\n    if (newStake >= -(gameData.player.stake - 1)) {\n      setNewStake(newStake - 1);\n    }\n  };\n\n  const countDecimals = value => {\n    if (Math.floor(value).toString() === value) return 0;\n    return value.toString().split(\".\")[1].length || 0;\n  };\n\n  const confirm = async () => {\n    try {\n      if (txFee === undefined || txFee === \"\") {\n        setAlertContent('You must enter a value');\n        setShowAlert(true);\n      } else {\n        if (isNaN(txFee) || txFee < 0) {\n          setAlertContent('Input must be a positive number');\n          setShowAlert(true);\n        } else {\n          if (countDecimals(txFee) > 1) {\n            setAlertContent('Input value can have at most one decimal place');\n            setShowAlert(true);\n          } else {\n            if (newStake + parseFloat(txFee) > gameData.player.balance) {\n              setAlertContent('Price and TxFee is higher than balance');\n              setShowAlert(true);\n            } else {\n              const token = localStorage.getItem(\"auth-token\");\n              const playerId = localStorage.getItem(\"playerId\");\n\n              if (newStake > 0) {\n                const data = {\n                  stake: newStake.toString(),\n                  txFee: txFee\n                };\n                const options = {\n                  headers: {\n                    Authorization: \"Bearer \" + token\n                  }\n                };\n                const confirmRes = await Axios.post(`/player/stake/${playerId}`, data, options);\n              }\n\n              if (newStake < 0) {\n                const newUnstake = -newStake;\n                const data = {\n                  unstake: newUnstake.toString(),\n                  txFee: txFee\n                };\n                const options = {\n                  headers: {\n                    Authorization: \"Bearer \" + token\n                  }\n                };\n                const confirmRes = await Axios.post(`/player/unstake/${playerId}`, data, options);\n              }\n\n              setNewStake(0);\n              closeStakeModal();\n              setAlertContent('');\n              setShowAlert(false);\n              setTxFee();\n              document.getElementById(\"inputHolder\").value = \"\";\n            }\n          }\n        }\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    let newRelativeStake = Math.floor(gameData.player.stake / gameData.totalStake * 100);\n    setRelativeStake(newRelativeStake);\n  }, [gameData]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `${isStakeModalOpen ? 'modal-confirm-overlay show-modal-confirm' : 'modal-confirm-overlay'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-confirm-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, \"Stake: \", gameData.player.stake, \" (\", relativeStake, \"%)\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stake-modal-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"decrease-stake-btn\",\n    onClick: decreaseNewStake,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FaMinus, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 25\n    }\n  }, newStake)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"increase-stake-btn\",\n    onClick: increaseNewStake,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FaPlus, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-input-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"txFee\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  }, \"Tx Fee\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-input-group-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"txFee\",\n    id: \"inputHolder\",\n    placeholder: \"Enter tx fee\",\n    onChange: e => setTxFee(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: `${showAlert ? 'modal-input-alert show-modal-input-alert' : 'modal-input-alert'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, alertContent), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"close-modal-btn\",\n    onClick: () => {\n      setNewStake(0);\n      closeStakeModal();\n      setAlertContent('');\n      setShowAlert(false);\n      setTxFee();\n      document.getElementById(\"inputHolder\").value = \"\";\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FaTimes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"confirm-modal-btn\",\n    onClick: confirm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }, \"Confirm\")));\n};\n\nexport default StakeModal;","map":{"version":3,"sources":["/home/nejc/LDSE/SharedManufacturing/client/src/components/misc/StakeModal.js"],"names":["React","useState","useEffect","useGlobalContext","FaTimes","FaPlus","FaMinus","Axios","StakeModal","gameData","isStakeModalOpen","closeStakeModal","relativeStake","setRelativeStake","newStake","setNewStake","txFee","setTxFee","showAlert","setShowAlert","alertContent","setAlertContent","increaseNewStake","player","balance","decreaseNewStake","stake","countDecimals","value","Math","floor","toString","split","length","confirm","undefined","isNaN","parseFloat","token","localStorage","getItem","playerId","data","options","headers","Authorization","confirmRes","post","newUnstake","unstake","document","getElementById","err","console","log","newRelativeStake","totalStake","e","target"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { useGlobalContext} from \"../../context/context\";\nimport { FaTimes, FaPlus, FaMinus } from 'react-icons/fa';\nimport Axios from \"axios/index\";\n\nconst StakeModal = () => {\n    const { gameData, isStakeModalOpen, closeStakeModal } = useGlobalContext();\n    const [relativeStake, setRelativeStake] = useState(0);\n    const [newStake, setNewStake] = useState(0);\n    const [txFee, setTxFee] = useState();\n    const [showAlert, setShowAlert] = useState(false);\n    const [alertContent, setAlertContent] = useState('');\n\n    const increaseNewStake = () => {\n        if (newStake <= gameData.player.balance-1) {\n            setNewStake(newStake+1);\n        }\n    };\n\n    const decreaseNewStake = () => {\n        if (newStake >= -(gameData.player.stake-1)) {\n            setNewStake(newStake-1);\n        }\n    };\n\n    const countDecimals = (value) => {\n        if(Math.floor(value).toString() === value) return 0;\n        return value.toString().split(\".\")[1].length || 0;\n    };\n\n    const confirm = async () => {\n        try {\n            if (txFee === undefined || txFee === \"\") {\n                setAlertContent('You must enter a value');\n                setShowAlert(true);\n            } else {\n                if (isNaN(txFee) || txFee < 0) {\n                    setAlertContent('Input must be a positive number');\n                    setShowAlert(true);\n                } else {\n                    if (countDecimals(txFee) > 1) {\n                        setAlertContent('Input value can have at most one decimal place');\n                        setShowAlert(true);\n                    } else {\n                        if (newStake+parseFloat(txFee) > gameData.player.balance) {\n                            setAlertContent('Price and TxFee is higher than balance');\n                            setShowAlert(true);\n                        } else {\n                            const token = localStorage.getItem(\"auth-token\");\n                            const playerId = localStorage.getItem(\"playerId\");\n                            if (newStake > 0) {\n                                const data = {\n                                    stake: newStake.toString(),\n                                    txFee: txFee\n                                };\n                                const options = {\n                                    headers: {\n                                        Authorization: \"Bearer \" + token\n                                    }\n                                };\n                                const confirmRes =  await Axios.post(`/player/stake/${playerId}`, data, options);\n                            } if (newStake < 0) {\n                                const newUnstake = -newStake;\n                                const data = {\n                                    unstake: newUnstake.toString(),\n                                    txFee: txFee\n                                };\n                                const options = {\n                                    headers: {\n                                        Authorization: \"Bearer \" + token\n                                    }\n                                };\n                                const confirmRes =  await Axios.post(`/player/unstake/${playerId}`, data, options);\n                            }\n                            setNewStake(0);\n                            closeStakeModal();\n                            setAlertContent('');\n                            setShowAlert(false);\n                            setTxFee();\n                            document.getElementById(\"inputHolder\").value= \"\";\n                        }\n                    }\n                }\n            }\n\n        } catch(err) {\n            console.log(err);\n        }\n    };\n\n    useEffect(() => {\n        let newRelativeStake = Math.floor((gameData.player.stake / gameData.totalStake) * 100);\n        setRelativeStake(newRelativeStake);\n    }, [gameData]);\n\n    return (\n        <div\n            className={`${\n                isStakeModalOpen ? 'modal-confirm-overlay show-modal-confirm' : 'modal-confirm-overlay'\n                }`}\n        >\n            <div className='modal-confirm-container'>\n                <h3>Stake: {gameData.player.stake} ({relativeStake}%)</h3>\n                <div className=\"stake-modal-container\">\n                    <div>\n                        <button className='decrease-stake-btn' onClick={decreaseNewStake}>\n                            <FaMinus></FaMinus>\n                        </button>\n                    </div>\n                    <div>\n                        <h1>{newStake}</h1>\n                    </div>\n                    <div>\n                        <button className='increase-stake-btn' onClick={increaseNewStake}>\n                            <FaPlus></FaPlus>\n                        </button>\n                    </div>\n                </div>\n                <div className={\"modal-input-group\"}>\n                    <label htmlFor={\"txFee\"}>Tx Fee</label>\n                    <div className=\"modal-input-group-container\">\n                        <input type={\"text\"} name={\"txFee\"} id={\"inputHolder\"} placeholder={\"Enter tx fee\"} onChange={e => setTxFee(e.target.value)}/>\n                    </div>\n                </div>\n                <div className={`${showAlert? 'modal-input-alert show-modal-input-alert' : 'modal-input-alert'}`}>\n                    {alertContent}\n                </div>\n                <button className='close-modal-btn' onClick={() => {\n                    setNewStake(0);\n                    closeStakeModal();\n                    setAlertContent('');\n                    setShowAlert(false);\n                    setTxFee();\n                    document.getElementById(\"inputHolder\").value= \"\";\n                }}>\n                    <FaTimes></FaTimes>\n                </button>\n                <button className='confirm-modal-btn' onClick={confirm}>Confirm</button>\n            </div>\n        </div>\n    )\n};\n\nexport default StakeModal"]},"metadata":{},"sourceType":"module"}